/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.tc.poc.dms.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import com.tc.poc.dms.model.DmsPoc;
import com.tc.poc.dms.model.DmsPocModel;
import com.tc.poc.dms.model.DmsPocSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DmsPoc service. Represents a row in the &quot;DMSPOC_DmsPoc&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link DmsPocModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DmsPocImpl}.
 * </p>
 *
 * @author Manisha Gera
 * @see DmsPocImpl
 * @see DmsPoc
 * @see DmsPocModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class DmsPocModelImpl extends BaseModelImpl<DmsPoc>
	implements DmsPocModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dms poc model instance should use the {@link DmsPoc} interface instead.
	 */
	public static final String TABLE_NAME = "DMSPOC_DmsPoc";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "id_", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "orgId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "modifiedBy", Types.BIGINT },
			{ "modifiedByName", Types.VARCHAR },
			{ "deleted", Types.BOOLEAN },
			{ "repairOrderNo", Types.VARCHAR },
			{ "dealerCode", Types.VARCHAR },
			{ "authorisedDealerInfo", Types.VARCHAR },
			{ "dealershipName", Types.VARCHAR },
			{ "dealershipAddress", Types.VARCHAR },
			{ "dealerShipPhoneNo", Types.BIGINT },
			{ "faxNo", Types.BIGINT },
			{ "dealershipEmail", Types.VARCHAR },
			{ "GST", Types.VARCHAR },
			{ "customerName", Types.VARCHAR },
			{ "customerAddress", Types.VARCHAR },
			{ "customerMobileNo", Types.BIGINT },
			{ "customerEmailAddress", Types.VARCHAR },
			{ "contactPerson", Types.VARCHAR },
			{ "contactPersonPhone", Types.BIGINT },
			{ "regNo", Types.VARCHAR },
			{ "VIN", Types.VARCHAR },
			{ "dateOfDelivery", Types.TIMESTAMP },
			{ "kmsIn", Types.BIGINT },
			{ "model", Types.VARCHAR },
			{ "engineNo", Types.VARCHAR },
			{ "insurancePolicyNo", Types.VARCHAR },
			{ "insuranceExpiryDate", Types.TIMESTAMP },
			{ "rsaRequired", Types.BOOLEAN },
			{ "appointmentType", Types.VARCHAR },
			{ "orderDateIn", Types.TIMESTAMP },
			{ "orderTimeIn", Types.TIMESTAMP },
			{ "serviceAdvisor", Types.VARCHAR },
			{ "serviceAdvisorMobileNo", Types.BIGINT },
			{ "soldByDealer", Types.VARCHAR },
			{ "customerMobilityType", Types.VARCHAR },
			{ "transactionNo", Types.VARCHAR },
			{ "reasonForVisit", Types.VARCHAR },
			{ "extendedWarranty", Types.VARCHAR },
			{ "servicePlan", Types.VARCHAR },
			{ "customerOrderDescription", Types.VARCHAR },
			{ "complaint", Types.VARCHAR },
			{ "workToBeDone", Types.VARCHAR },
			{ "instruction", Types.VARCHAR },
			{ "carPicture", Types.VARCHAR },
			{ "xDent", Types.VARCHAR },
			{ "scratch", Types.VARCHAR },
			{ "bodyDamage", Types.VARCHAR },
			{ "modificationOrNonOBMFittings", Types.VARCHAR },
			{ "tyreCondition", Types.VARCHAR },
			{ "treadDepth", Types.VARCHAR },
			{ "frontRight", Types.VARCHAR },
			{ "frontLeft", Types.VARCHAR },
			{ "rearRight", Types.VARCHAR },
			{ "rearLeft", Types.VARCHAR },
			{ "windowsGlazzing", Types.VARCHAR },
			{ "wiperBlades", Types.VARCHAR },
			{ "lights", Types.VARCHAR },
			{ "exhaustSystem", Types.VARCHAR },
			{ "underbody", Types.VARCHAR },
			{ "engineCompartment", Types.VARCHAR },
			{ "washing", Types.VARCHAR },
			{ "oilLevel", Types.VARCHAR },
			{ "coolant", Types.VARCHAR },
			{ "windshieldWasher", Types.VARCHAR },
			{ "brakes", Types.VARCHAR },
			{ "axle", Types.VARCHAR },
			{ "monograms", Types.VARCHAR },
			{ "polishing", Types.VARCHAR },
			{ "fuel", Types.VARCHAR },
			{ "ownersManual", Types.VARCHAR },
			{ "serScheMaintenanceManual", Types.VARCHAR },
			{ "infotainmentMmiNavigManual", Types.VARCHAR },
			{ "extWarrantyBook", Types.VARCHAR },
			{ "quickReferenceGuide", Types.VARCHAR },
			{ "spareWheel", Types.VARCHAR },
			{ "jackToolKits", Types.VARCHAR },
			{ "floorMat", Types.VARCHAR },
			{ "mudFlaps", Types.VARCHAR },
			{ "warningTriangle", Types.VARCHAR },
			{ "firstAidKit", Types.VARCHAR },
			{ "noOfKeys", Types.BIGINT },
			{ "otherLooseItems", Types.VARCHAR },
			{ "financialInformation", Types.VARCHAR },
			{ "modeOfPayment", Types.VARCHAR },
			{ "estimatedCost", Types.BIGINT },
			{ "taxesAsApplicable", Types.VARCHAR },
			{ "estimatedDateOfDelivery", Types.TIMESTAMP },
			{ "estimatedDeliveryTime", Types.VARCHAR },
			{ "laborEstimate", Types.BIGINT },
			{ "parts", Types.BIGINT },
			{ "termsAndConditions", Types.VARCHAR },
			{ "grantMyConsent", Types.VARCHAR },
			{ "serviceAdvisotSignature", Types.VARCHAR },
			{ "customerSignature", Types.VARCHAR },
			{ "remarksArea", Types.VARCHAR },
			{ "termsStrictly", Types.VARCHAR },
			{ "workshopCopy", Types.VARCHAR },
			{ "version", Types.VARCHAR },
			{ "customerWaiting", Types.BOOLEAN },
			{ "campaign", Types.VARCHAR },
			{ "dissNo", Types.VARCHAR },
			{ "descriptiveInformation", Types.VARCHAR },
			{ "timeStart", Types.VARCHAR },
			{ "timeStop", Types.VARCHAR },
			{ "nameOfTechnician", Types.VARCHAR },
			{ "technicianSignature", Types.VARCHAR },
			{ "inventoryPartsJSONStr", Types.VARCHAR },
			{ "partNumber", Types.VARCHAR },
			{ "partDescription", Types.VARCHAR },
			{ "partCatagory", Types.VARCHAR },
			{ "internalPartsOrder", Types.VARCHAR },
			{ "partQuantity", Types.VARCHAR },
			{ "partRate", Types.VARCHAR },
			{ "partCost", Types.VARCHAR },
			{ "partTotal", Types.VARCHAR },
			{ "partsJSONStr", Types.VARCHAR },
			{ "labourDescription", Types.VARCHAR },
			{ "labourCatagory", Types.VARCHAR },
			{ "labourCode", Types.VARCHAR },
			{ "timeUnit", Types.VARCHAR },
			{ "hours", Types.VARCHAR },
			{ "labourRate", Types.VARCHAR },
			{ "labourCost", Types.BIGINT },
			{ "labourTotal", Types.BIGINT },
			{ "labourJSONStr", Types.VARCHAR },
			{ "additionalRepairsReqDesc", Types.VARCHAR },
			{ "additionalRepairsReqPart", Types.VARCHAR },
			{ "additionalRepairsReqLabour", Types.VARCHAR },
			{ "additionalRepairsReqAuth", Types.VARCHAR },
			{ "additionalRepairsReqDT", Types.TIMESTAMP },
			{ "roadTestKmOut", Types.BIGINT },
			{ "roadTestKmIn", Types.BIGINT },
			{ "allJobsAttended", Types.BOOLEAN },
			{ "accessoriesSettingAsOriginal", Types.BOOLEAN },
			{ "roadTestSignature", Types.VARCHAR },
			{ "roadTestDate", Types.TIMESTAMP },
			{ "interiors", Types.BOOLEAN },
			{ "interiorsPolishing", Types.BOOLEAN },
			{ "exteriors", Types.BOOLEAN },
			{ "exteriorsPolishing", Types.BOOLEAN },
			{ "vacuumCleaned", Types.BOOLEAN },
			{ "washingCheckerSignature", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "toShow", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("orgId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedBy", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("modifiedByName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("deleted", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("repairOrderNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealerCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("authorisedDealerInfo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealershipName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealershipAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dealerShipPhoneNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("faxNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("dealershipEmail", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("GST", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customerAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customerMobileNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("customerEmailAddress", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPerson", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactPersonPhone", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("regNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VIN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dateOfDelivery", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("kmsIn", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("model", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("engineNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insurancePolicyNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("insuranceExpiryDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("rsaRequired", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("appointmentType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("orderDateIn", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("orderTimeIn", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("serviceAdvisor", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceAdvisorMobileNo", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("soldByDealer", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customerMobilityType", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("transactionNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("reasonForVisit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("extendedWarranty", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("servicePlan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customerOrderDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("complaint", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workToBeDone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("instruction", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("carPicture", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("xDent", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("scratch", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bodyDamage", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modificationOrNonOBMFittings", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tyreCondition", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("treadDepth", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("frontRight", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("frontLeft", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rearRight", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("rearLeft", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("windowsGlazzing", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("wiperBlades", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("lights", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("exhaustSystem", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("underbody", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("engineCompartment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("washing", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("oilLevel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("coolant", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("windshieldWasher", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("brakes", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("axle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("monograms", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("polishing", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("fuel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ownersManual", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serScheMaintenanceManual", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("infotainmentMmiNavigManual", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("extWarrantyBook", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("quickReferenceGuide", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("spareWheel", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("jackToolKits", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("floorMat", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("mudFlaps", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("warningTriangle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("firstAidKit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("noOfKeys", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("otherLooseItems", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("financialInformation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modeOfPayment", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("estimatedCost", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("taxesAsApplicable", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("estimatedDateOfDelivery", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("estimatedDeliveryTime", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("laborEstimate", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("parts", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("termsAndConditions", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("grantMyConsent", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("serviceAdvisotSignature", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customerSignature", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("remarksArea", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("termsStrictly", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("workshopCopy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("version", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("customerWaiting", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("campaign", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dissNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descriptiveInformation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("timeStart", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("timeStop", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nameOfTechnician", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("technicianSignature", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("inventoryPartsJSONStr", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partCatagory", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("internalPartsOrder", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partQuantity", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partRate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partCost", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partTotal", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("partsJSONStr", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourCatagory", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("timeUnit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hours", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourRate", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("labourCost", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("labourTotal", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("labourJSONStr", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("additionalRepairsReqDesc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("additionalRepairsReqPart", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("additionalRepairsReqLabour", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("additionalRepairsReqAuth", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("additionalRepairsReqDT", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("roadTestKmOut", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("roadTestKmIn", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("allJobsAttended", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("accessoriesSettingAsOriginal", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("roadTestSignature", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("roadTestDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("interiors", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("interiorsPolishing", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("exteriors", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("exteriorsPolishing", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("vacuumCleaned", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("washingCheckerSignature", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("toShow", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table DMSPOC_DmsPoc (uuid_ VARCHAR(75) null,id_ LONG not null primary key,groupId LONG,orgId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,modifiedBy LONG,modifiedByName VARCHAR(75) null,deleted BOOLEAN,repairOrderNo VARCHAR(75) null,dealerCode VARCHAR(75) null,authorisedDealerInfo VARCHAR(75) null,dealershipName VARCHAR(75) null,dealershipAddress VARCHAR(75) null,dealerShipPhoneNo LONG,faxNo LONG,dealershipEmail VARCHAR(75) null,GST VARCHAR(75) null,customerName VARCHAR(75) null,customerAddress VARCHAR(75) null,customerMobileNo LONG,customerEmailAddress VARCHAR(75) null,contactPerson VARCHAR(75) null,contactPersonPhone LONG,regNo VARCHAR(75) null,VIN VARCHAR(75) null,dateOfDelivery DATE null,kmsIn LONG,model VARCHAR(75) null,engineNo VARCHAR(75) null,insurancePolicyNo VARCHAR(75) null,insuranceExpiryDate DATE null,rsaRequired BOOLEAN,appointmentType VARCHAR(75) null,orderDateIn DATE null,orderTimeIn DATE null,serviceAdvisor VARCHAR(75) null,serviceAdvisorMobileNo LONG,soldByDealer VARCHAR(75) null,customerMobilityType VARCHAR(75) null,transactionNo VARCHAR(75) null,reasonForVisit VARCHAR(75) null,extendedWarranty VARCHAR(75) null,servicePlan VARCHAR(75) null,customerOrderDescription VARCHAR(75) null,complaint VARCHAR(75) null,workToBeDone VARCHAR(75) null,instruction VARCHAR(75) null,carPicture VARCHAR(75) null,xDent VARCHAR(75) null,scratch VARCHAR(75) null,bodyDamage VARCHAR(75) null,modificationOrNonOBMFittings VARCHAR(75) null,tyreCondition VARCHAR(75) null,treadDepth VARCHAR(75) null,frontRight VARCHAR(75) null,frontLeft VARCHAR(75) null,rearRight VARCHAR(75) null,rearLeft VARCHAR(75) null,windowsGlazzing VARCHAR(75) null,wiperBlades VARCHAR(75) null,lights VARCHAR(75) null,exhaustSystem VARCHAR(75) null,underbody VARCHAR(75) null,engineCompartment VARCHAR(75) null,washing VARCHAR(75) null,oilLevel VARCHAR(75) null,coolant VARCHAR(75) null,windshieldWasher VARCHAR(75) null,brakes VARCHAR(75) null,axle VARCHAR(75) null,monograms VARCHAR(75) null,polishing VARCHAR(75) null,fuel VARCHAR(75) null,ownersManual TEXT null,serScheMaintenanceManual VARCHAR(75) null,infotainmentMmiNavigManual VARCHAR(75) null,extWarrantyBook VARCHAR(75) null,quickReferenceGuide VARCHAR(75) null,spareWheel VARCHAR(75) null,jackToolKits VARCHAR(75) null,floorMat VARCHAR(75) null,mudFlaps VARCHAR(75) null,warningTriangle VARCHAR(75) null,firstAidKit VARCHAR(75) null,noOfKeys LONG,otherLooseItems VARCHAR(75) null,financialInformation VARCHAR(75) null,modeOfPayment VARCHAR(75) null,estimatedCost LONG,taxesAsApplicable VARCHAR(75) null,estimatedDateOfDelivery DATE null,estimatedDeliveryTime VARCHAR(75) null,laborEstimate LONG,parts LONG,termsAndConditions VARCHAR(75) null,grantMyConsent VARCHAR(75) null,serviceAdvisotSignature VARCHAR(75) null,customerSignature TEXT null,remarksArea VARCHAR(75) null,termsStrictly VARCHAR(75) null,workshopCopy VARCHAR(75) null,version VARCHAR(75) null,customerWaiting BOOLEAN,campaign VARCHAR(75) null,dissNo VARCHAR(75) null,descriptiveInformation VARCHAR(75) null,timeStart VARCHAR(75) null,timeStop VARCHAR(75) null,nameOfTechnician VARCHAR(75) null,technicianSignature VARCHAR(75) null,inventoryPartsJSONStr VARCHAR(2048) null,partNumber VARCHAR(75) null,partDescription VARCHAR(75) null,partCatagory VARCHAR(75) null,internalPartsOrder VARCHAR(75) null,partQuantity VARCHAR(75) null,partRate VARCHAR(75) null,partCost VARCHAR(75) null,partTotal VARCHAR(75) null,partsJSONStr VARCHAR(2048) null,labourDescription VARCHAR(75) null,labourCatagory VARCHAR(75) null,labourCode VARCHAR(75) null,timeUnit VARCHAR(75) null,hours VARCHAR(75) null,labourRate VARCHAR(75) null,labourCost LONG,labourTotal LONG,labourJSONStr VARCHAR(2048) null,additionalRepairsReqDesc VARCHAR(75) null,additionalRepairsReqPart VARCHAR(75) null,additionalRepairsReqLabour VARCHAR(75) null,additionalRepairsReqAuth VARCHAR(75) null,additionalRepairsReqDT DATE null,roadTestKmOut LONG,roadTestKmIn LONG,allJobsAttended BOOLEAN,accessoriesSettingAsOriginal BOOLEAN,roadTestSignature VARCHAR(75) null,roadTestDate DATE null,interiors BOOLEAN,interiorsPolishing BOOLEAN,exteriors BOOLEAN,exteriorsPolishing BOOLEAN,vacuumCleaned BOOLEAN,washingCheckerSignature VARCHAR(75) null,status VARCHAR(75) null,toShow BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table DMSPOC_DmsPoc";
	public static final String ORDER_BY_JPQL = " ORDER BY dmsPoc.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY DMSPOC_DmsPoc.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.tc.poc.dms.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.com.tc.poc.dms.model.DmsPoc"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.tc.poc.dms.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.com.tc.poc.dms.model.DmsPoc"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.tc.poc.dms.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.tc.poc.dms.model.DmsPoc"),
			true);
	public static final long VIN_COLUMN_BITMASK = 1L;
	public static final long COMPANYID_COLUMN_BITMASK = 2L;
	public static final long DELETED_COLUMN_BITMASK = 4L;
	public static final long GROUPID_COLUMN_BITMASK = 8L;
	public static final long REGNO_COLUMN_BITMASK = 16L;
	public static final long TOSHOW_COLUMN_BITMASK = 32L;
	public static final long UUID_COLUMN_BITMASK = 64L;
	public static final long ID_COLUMN_BITMASK = 128L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DmsPoc toModel(DmsPocSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DmsPoc model = new DmsPocImpl();

		model.setUuid(soapModel.getUuid());
		model.setId(soapModel.getId());
		model.setGroupId(soapModel.getGroupId());
		model.setOrgId(soapModel.getOrgId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setModifiedBy(soapModel.getModifiedBy());
		model.setModifiedByName(soapModel.getModifiedByName());
		model.setDeleted(soapModel.isDeleted());
		model.setRepairOrderNo(soapModel.getRepairOrderNo());
		model.setDealerCode(soapModel.getDealerCode());
		model.setAuthorisedDealerInfo(soapModel.getAuthorisedDealerInfo());
		model.setDealershipName(soapModel.getDealershipName());
		model.setDealershipAddress(soapModel.getDealershipAddress());
		model.setDealerShipPhoneNo(soapModel.getDealerShipPhoneNo());
		model.setFaxNo(soapModel.getFaxNo());
		model.setDealershipEmail(soapModel.getDealershipEmail());
		model.setGST(soapModel.getGST());
		model.setCustomerName(soapModel.getCustomerName());
		model.setCustomerAddress(soapModel.getCustomerAddress());
		model.setCustomerMobileNo(soapModel.getCustomerMobileNo());
		model.setCustomerEmailAddress(soapModel.getCustomerEmailAddress());
		model.setContactPerson(soapModel.getContactPerson());
		model.setContactPersonPhone(soapModel.getContactPersonPhone());
		model.setRegNo(soapModel.getRegNo());
		model.setVIN(soapModel.getVIN());
		model.setDateOfDelivery(soapModel.getDateOfDelivery());
		model.setKmsIn(soapModel.getKmsIn());
		model.setModel(soapModel.getModel());
		model.setEngineNo(soapModel.getEngineNo());
		model.setInsurancePolicyNo(soapModel.getInsurancePolicyNo());
		model.setInsuranceExpiryDate(soapModel.getInsuranceExpiryDate());
		model.setRsaRequired(soapModel.isRsaRequired());
		model.setAppointmentType(soapModel.getAppointmentType());
		model.setOrderDateIn(soapModel.getOrderDateIn());
		model.setOrderTimeIn(soapModel.getOrderTimeIn());
		model.setServiceAdvisor(soapModel.getServiceAdvisor());
		model.setServiceAdvisorMobileNo(soapModel.getServiceAdvisorMobileNo());
		model.setSoldByDealer(soapModel.getSoldByDealer());
		model.setCustomerMobilityType(soapModel.getCustomerMobilityType());
		model.setTransactionNo(soapModel.getTransactionNo());
		model.setReasonForVisit(soapModel.getReasonForVisit());
		model.setExtendedWarranty(soapModel.getExtendedWarranty());
		model.setServicePlan(soapModel.getServicePlan());
		model.setCustomerOrderDescription(soapModel.getCustomerOrderDescription());
		model.setComplaint(soapModel.getComplaint());
		model.setWorkToBeDone(soapModel.getWorkToBeDone());
		model.setInstruction(soapModel.getInstruction());
		model.setCarPicture(soapModel.getCarPicture());
		model.setXDent(soapModel.getXDent());
		model.setScratch(soapModel.getScratch());
		model.setBodyDamage(soapModel.getBodyDamage());
		model.setModificationOrNonOBMFittings(soapModel.getModificationOrNonOBMFittings());
		model.setTyreCondition(soapModel.getTyreCondition());
		model.setTreadDepth(soapModel.getTreadDepth());
		model.setFrontRight(soapModel.getFrontRight());
		model.setFrontLeft(soapModel.getFrontLeft());
		model.setRearRight(soapModel.getRearRight());
		model.setRearLeft(soapModel.getRearLeft());
		model.setWindowsGlazzing(soapModel.getWindowsGlazzing());
		model.setWiperBlades(soapModel.getWiperBlades());
		model.setLights(soapModel.getLights());
		model.setExhaustSystem(soapModel.getExhaustSystem());
		model.setUnderbody(soapModel.getUnderbody());
		model.setEngineCompartment(soapModel.getEngineCompartment());
		model.setWashing(soapModel.getWashing());
		model.setOilLevel(soapModel.getOilLevel());
		model.setCoolant(soapModel.getCoolant());
		model.setWindshieldWasher(soapModel.getWindshieldWasher());
		model.setBrakes(soapModel.getBrakes());
		model.setAxle(soapModel.getAxle());
		model.setMonograms(soapModel.getMonograms());
		model.setPolishing(soapModel.getPolishing());
		model.setFuel(soapModel.getFuel());
		model.setOwnersManual(soapModel.getOwnersManual());
		model.setSerScheMaintenanceManual(soapModel.getSerScheMaintenanceManual());
		model.setInfotainmentMmiNavigManual(soapModel.getInfotainmentMmiNavigManual());
		model.setExtWarrantyBook(soapModel.getExtWarrantyBook());
		model.setQuickReferenceGuide(soapModel.getQuickReferenceGuide());
		model.setSpareWheel(soapModel.getSpareWheel());
		model.setJackToolKits(soapModel.getJackToolKits());
		model.setFloorMat(soapModel.getFloorMat());
		model.setMudFlaps(soapModel.getMudFlaps());
		model.setWarningTriangle(soapModel.getWarningTriangle());
		model.setFirstAidKit(soapModel.getFirstAidKit());
		model.setNoOfKeys(soapModel.getNoOfKeys());
		model.setOtherLooseItems(soapModel.getOtherLooseItems());
		model.setFinancialInformation(soapModel.getFinancialInformation());
		model.setModeOfPayment(soapModel.getModeOfPayment());
		model.setEstimatedCost(soapModel.getEstimatedCost());
		model.setTaxesAsApplicable(soapModel.getTaxesAsApplicable());
		model.setEstimatedDateOfDelivery(soapModel.getEstimatedDateOfDelivery());
		model.setEstimatedDeliveryTime(soapModel.getEstimatedDeliveryTime());
		model.setLaborEstimate(soapModel.getLaborEstimate());
		model.setParts(soapModel.getParts());
		model.setTermsAndConditions(soapModel.getTermsAndConditions());
		model.setGrantMyConsent(soapModel.getGrantMyConsent());
		model.setServiceAdvisotSignature(soapModel.getServiceAdvisotSignature());
		model.setCustomerSignature(soapModel.getCustomerSignature());
		model.setRemarksArea(soapModel.getRemarksArea());
		model.setTermsStrictly(soapModel.getTermsStrictly());
		model.setWorkshopCopy(soapModel.getWorkshopCopy());
		model.setVersion(soapModel.getVersion());
		model.setCustomerWaiting(soapModel.isCustomerWaiting());
		model.setCampaign(soapModel.getCampaign());
		model.setDissNo(soapModel.getDissNo());
		model.setDescriptiveInformation(soapModel.getDescriptiveInformation());
		model.setTimeStart(soapModel.getTimeStart());
		model.setTimeStop(soapModel.getTimeStop());
		model.setNameOfTechnician(soapModel.getNameOfTechnician());
		model.setTechnicianSignature(soapModel.getTechnicianSignature());
		model.setInventoryPartsJSONStr(soapModel.getInventoryPartsJSONStr());
		model.setPartNumber(soapModel.getPartNumber());
		model.setPartDescription(soapModel.getPartDescription());
		model.setPartCatagory(soapModel.getPartCatagory());
		model.setInternalPartsOrder(soapModel.getInternalPartsOrder());
		model.setPartQuantity(soapModel.getPartQuantity());
		model.setPartRate(soapModel.getPartRate());
		model.setPartCost(soapModel.getPartCost());
		model.setPartTotal(soapModel.getPartTotal());
		model.setPartsJSONStr(soapModel.getPartsJSONStr());
		model.setLabourDescription(soapModel.getLabourDescription());
		model.setLabourCatagory(soapModel.getLabourCatagory());
		model.setLabourCode(soapModel.getLabourCode());
		model.setTimeUnit(soapModel.getTimeUnit());
		model.setHours(soapModel.getHours());
		model.setLabourRate(soapModel.getLabourRate());
		model.setLabourCost(soapModel.getLabourCost());
		model.setLabourTotal(soapModel.getLabourTotal());
		model.setLabourJSONStr(soapModel.getLabourJSONStr());
		model.setAdditionalRepairsReqDesc(soapModel.getAdditionalRepairsReqDesc());
		model.setAdditionalRepairsReqPart(soapModel.getAdditionalRepairsReqPart());
		model.setAdditionalRepairsReqLabour(soapModel.getAdditionalRepairsReqLabour());
		model.setAdditionalRepairsReqAuth(soapModel.getAdditionalRepairsReqAuth());
		model.setAdditionalRepairsReqDT(soapModel.getAdditionalRepairsReqDT());
		model.setRoadTestKmOut(soapModel.getRoadTestKmOut());
		model.setRoadTestKmIn(soapModel.getRoadTestKmIn());
		model.setAllJobsAttended(soapModel.isAllJobsAttended());
		model.setAccessoriesSettingAsOriginal(soapModel.isAccessoriesSettingAsOriginal());
		model.setRoadTestSignature(soapModel.getRoadTestSignature());
		model.setRoadTestDate(soapModel.getRoadTestDate());
		model.setInteriors(soapModel.isInteriors());
		model.setInteriorsPolishing(soapModel.isInteriorsPolishing());
		model.setExteriors(soapModel.isExteriors());
		model.setExteriorsPolishing(soapModel.isExteriorsPolishing());
		model.setVacuumCleaned(soapModel.isVacuumCleaned());
		model.setWashingCheckerSignature(soapModel.getWashingCheckerSignature());
		model.setStatus(soapModel.getStatus());
		model.setToShow(soapModel.isToShow());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DmsPoc> toModels(DmsPocSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DmsPoc> models = new ArrayList<DmsPoc>(soapModels.length);

		for (DmsPocSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.tc.poc.dms.service.util.ServiceProps.get(
				"lock.expiration.time.com.tc.poc.dms.model.DmsPoc"));

	public DmsPocModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DmsPoc.class;
	}

	@Override
	public String getModelClassName() {
		return DmsPoc.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("id", getId());
		attributes.put("groupId", getGroupId());
		attributes.put("orgId", getOrgId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("modifiedByName", getModifiedByName());
		attributes.put("deleted", isDeleted());
		attributes.put("repairOrderNo", getRepairOrderNo());
		attributes.put("dealerCode", getDealerCode());
		attributes.put("authorisedDealerInfo", getAuthorisedDealerInfo());
		attributes.put("dealershipName", getDealershipName());
		attributes.put("dealershipAddress", getDealershipAddress());
		attributes.put("dealerShipPhoneNo", getDealerShipPhoneNo());
		attributes.put("faxNo", getFaxNo());
		attributes.put("dealershipEmail", getDealershipEmail());
		attributes.put("GST", getGST());
		attributes.put("customerName", getCustomerName());
		attributes.put("customerAddress", getCustomerAddress());
		attributes.put("customerMobileNo", getCustomerMobileNo());
		attributes.put("customerEmailAddress", getCustomerEmailAddress());
		attributes.put("contactPerson", getContactPerson());
		attributes.put("contactPersonPhone", getContactPersonPhone());
		attributes.put("regNo", getRegNo());
		attributes.put("VIN", getVIN());
		attributes.put("dateOfDelivery", getDateOfDelivery());
		attributes.put("kmsIn", getKmsIn());
		attributes.put("model", getModel());
		attributes.put("engineNo", getEngineNo());
		attributes.put("insurancePolicyNo", getInsurancePolicyNo());
		attributes.put("insuranceExpiryDate", getInsuranceExpiryDate());
		attributes.put("rsaRequired", isRsaRequired());
		attributes.put("appointmentType", getAppointmentType());
		attributes.put("orderDateIn", getOrderDateIn());
		attributes.put("orderTimeIn", getOrderTimeIn());
		attributes.put("serviceAdvisor", getServiceAdvisor());
		attributes.put("serviceAdvisorMobileNo", getServiceAdvisorMobileNo());
		attributes.put("soldByDealer", getSoldByDealer());
		attributes.put("customerMobilityType", getCustomerMobilityType());
		attributes.put("transactionNo", getTransactionNo());
		attributes.put("reasonForVisit", getReasonForVisit());
		attributes.put("extendedWarranty", getExtendedWarranty());
		attributes.put("servicePlan", getServicePlan());
		attributes.put("customerOrderDescription", getCustomerOrderDescription());
		attributes.put("complaint", getComplaint());
		attributes.put("workToBeDone", getWorkToBeDone());
		attributes.put("instruction", getInstruction());
		attributes.put("carPicture", getCarPicture());
		attributes.put("xDent", getXDent());
		attributes.put("scratch", getScratch());
		attributes.put("bodyDamage", getBodyDamage());
		attributes.put("modificationOrNonOBMFittings",
			getModificationOrNonOBMFittings());
		attributes.put("tyreCondition", getTyreCondition());
		attributes.put("treadDepth", getTreadDepth());
		attributes.put("frontRight", getFrontRight());
		attributes.put("frontLeft", getFrontLeft());
		attributes.put("rearRight", getRearRight());
		attributes.put("rearLeft", getRearLeft());
		attributes.put("windowsGlazzing", getWindowsGlazzing());
		attributes.put("wiperBlades", getWiperBlades());
		attributes.put("lights", getLights());
		attributes.put("exhaustSystem", getExhaustSystem());
		attributes.put("underbody", getUnderbody());
		attributes.put("engineCompartment", getEngineCompartment());
		attributes.put("washing", getWashing());
		attributes.put("oilLevel", getOilLevel());
		attributes.put("coolant", getCoolant());
		attributes.put("windshieldWasher", getWindshieldWasher());
		attributes.put("brakes", getBrakes());
		attributes.put("axle", getAxle());
		attributes.put("monograms", getMonograms());
		attributes.put("polishing", getPolishing());
		attributes.put("fuel", getFuel());
		attributes.put("ownersManual", getOwnersManual());
		attributes.put("serScheMaintenanceManual", getSerScheMaintenanceManual());
		attributes.put("infotainmentMmiNavigManual",
			getInfotainmentMmiNavigManual());
		attributes.put("extWarrantyBook", getExtWarrantyBook());
		attributes.put("quickReferenceGuide", getQuickReferenceGuide());
		attributes.put("spareWheel", getSpareWheel());
		attributes.put("jackToolKits", getJackToolKits());
		attributes.put("floorMat", getFloorMat());
		attributes.put("mudFlaps", getMudFlaps());
		attributes.put("warningTriangle", getWarningTriangle());
		attributes.put("firstAidKit", getFirstAidKit());
		attributes.put("noOfKeys", getNoOfKeys());
		attributes.put("otherLooseItems", getOtherLooseItems());
		attributes.put("financialInformation", getFinancialInformation());
		attributes.put("modeOfPayment", getModeOfPayment());
		attributes.put("estimatedCost", getEstimatedCost());
		attributes.put("taxesAsApplicable", getTaxesAsApplicable());
		attributes.put("estimatedDateOfDelivery", getEstimatedDateOfDelivery());
		attributes.put("estimatedDeliveryTime", getEstimatedDeliveryTime());
		attributes.put("laborEstimate", getLaborEstimate());
		attributes.put("parts", getParts());
		attributes.put("termsAndConditions", getTermsAndConditions());
		attributes.put("grantMyConsent", getGrantMyConsent());
		attributes.put("serviceAdvisotSignature", getServiceAdvisotSignature());
		attributes.put("customerSignature", getCustomerSignature());
		attributes.put("remarksArea", getRemarksArea());
		attributes.put("termsStrictly", getTermsStrictly());
		attributes.put("workshopCopy", getWorkshopCopy());
		attributes.put("version", getVersion());
		attributes.put("customerWaiting", isCustomerWaiting());
		attributes.put("campaign", getCampaign());
		attributes.put("dissNo", getDissNo());
		attributes.put("descriptiveInformation", getDescriptiveInformation());
		attributes.put("timeStart", getTimeStart());
		attributes.put("timeStop", getTimeStop());
		attributes.put("nameOfTechnician", getNameOfTechnician());
		attributes.put("technicianSignature", getTechnicianSignature());
		attributes.put("inventoryPartsJSONStr", getInventoryPartsJSONStr());
		attributes.put("partNumber", getPartNumber());
		attributes.put("partDescription", getPartDescription());
		attributes.put("partCatagory", getPartCatagory());
		attributes.put("internalPartsOrder", getInternalPartsOrder());
		attributes.put("partQuantity", getPartQuantity());
		attributes.put("partRate", getPartRate());
		attributes.put("partCost", getPartCost());
		attributes.put("partTotal", getPartTotal());
		attributes.put("partsJSONStr", getPartsJSONStr());
		attributes.put("labourDescription", getLabourDescription());
		attributes.put("labourCatagory", getLabourCatagory());
		attributes.put("labourCode", getLabourCode());
		attributes.put("timeUnit", getTimeUnit());
		attributes.put("hours", getHours());
		attributes.put("labourRate", getLabourRate());
		attributes.put("labourCost", getLabourCost());
		attributes.put("labourTotal", getLabourTotal());
		attributes.put("labourJSONStr", getLabourJSONStr());
		attributes.put("additionalRepairsReqDesc", getAdditionalRepairsReqDesc());
		attributes.put("additionalRepairsReqPart", getAdditionalRepairsReqPart());
		attributes.put("additionalRepairsReqLabour",
			getAdditionalRepairsReqLabour());
		attributes.put("additionalRepairsReqAuth", getAdditionalRepairsReqAuth());
		attributes.put("additionalRepairsReqDT", getAdditionalRepairsReqDT());
		attributes.put("roadTestKmOut", getRoadTestKmOut());
		attributes.put("roadTestKmIn", getRoadTestKmIn());
		attributes.put("allJobsAttended", isAllJobsAttended());
		attributes.put("accessoriesSettingAsOriginal",
			isAccessoriesSettingAsOriginal());
		attributes.put("roadTestSignature", getRoadTestSignature());
		attributes.put("roadTestDate", getRoadTestDate());
		attributes.put("interiors", isInteriors());
		attributes.put("interiorsPolishing", isInteriorsPolishing());
		attributes.put("exteriors", isExteriors());
		attributes.put("exteriorsPolishing", isExteriorsPolishing());
		attributes.put("vacuumCleaned", isVacuumCleaned());
		attributes.put("washingCheckerSignature", getWashingCheckerSignature());
		attributes.put("status", getStatus());
		attributes.put("toShow", isToShow());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long orgId = (Long)attributes.get("orgId");

		if (orgId != null) {
			setOrgId(orgId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long modifiedBy = (Long)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String modifiedByName = (String)attributes.get("modifiedByName");

		if (modifiedByName != null) {
			setModifiedByName(modifiedByName);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}

		String repairOrderNo = (String)attributes.get("repairOrderNo");

		if (repairOrderNo != null) {
			setRepairOrderNo(repairOrderNo);
		}

		String dealerCode = (String)attributes.get("dealerCode");

		if (dealerCode != null) {
			setDealerCode(dealerCode);
		}

		String authorisedDealerInfo = (String)attributes.get(
				"authorisedDealerInfo");

		if (authorisedDealerInfo != null) {
			setAuthorisedDealerInfo(authorisedDealerInfo);
		}

		String dealershipName = (String)attributes.get("dealershipName");

		if (dealershipName != null) {
			setDealershipName(dealershipName);
		}

		String dealershipAddress = (String)attributes.get("dealershipAddress");

		if (dealershipAddress != null) {
			setDealershipAddress(dealershipAddress);
		}

		Long dealerShipPhoneNo = (Long)attributes.get("dealerShipPhoneNo");

		if (dealerShipPhoneNo != null) {
			setDealerShipPhoneNo(dealerShipPhoneNo);
		}

		Long faxNo = (Long)attributes.get("faxNo");

		if (faxNo != null) {
			setFaxNo(faxNo);
		}

		String dealershipEmail = (String)attributes.get("dealershipEmail");

		if (dealershipEmail != null) {
			setDealershipEmail(dealershipEmail);
		}

		String GST = (String)attributes.get("GST");

		if (GST != null) {
			setGST(GST);
		}

		String customerName = (String)attributes.get("customerName");

		if (customerName != null) {
			setCustomerName(customerName);
		}

		String customerAddress = (String)attributes.get("customerAddress");

		if (customerAddress != null) {
			setCustomerAddress(customerAddress);
		}

		Long customerMobileNo = (Long)attributes.get("customerMobileNo");

		if (customerMobileNo != null) {
			setCustomerMobileNo(customerMobileNo);
		}

		String customerEmailAddress = (String)attributes.get(
				"customerEmailAddress");

		if (customerEmailAddress != null) {
			setCustomerEmailAddress(customerEmailAddress);
		}

		String contactPerson = (String)attributes.get("contactPerson");

		if (contactPerson != null) {
			setContactPerson(contactPerson);
		}

		Long contactPersonPhone = (Long)attributes.get("contactPersonPhone");

		if (contactPersonPhone != null) {
			setContactPersonPhone(contactPersonPhone);
		}

		String regNo = (String)attributes.get("regNo");

		if (regNo != null) {
			setRegNo(regNo);
		}

		String VIN = (String)attributes.get("VIN");

		if (VIN != null) {
			setVIN(VIN);
		}

		Date dateOfDelivery = (Date)attributes.get("dateOfDelivery");

		if (dateOfDelivery != null) {
			setDateOfDelivery(dateOfDelivery);
		}

		Long kmsIn = (Long)attributes.get("kmsIn");

		if (kmsIn != null) {
			setKmsIn(kmsIn);
		}

		String model = (String)attributes.get("model");

		if (model != null) {
			setModel(model);
		}

		String engineNo = (String)attributes.get("engineNo");

		if (engineNo != null) {
			setEngineNo(engineNo);
		}

		String insurancePolicyNo = (String)attributes.get("insurancePolicyNo");

		if (insurancePolicyNo != null) {
			setInsurancePolicyNo(insurancePolicyNo);
		}

		Date insuranceExpiryDate = (Date)attributes.get("insuranceExpiryDate");

		if (insuranceExpiryDate != null) {
			setInsuranceExpiryDate(insuranceExpiryDate);
		}

		Boolean rsaRequired = (Boolean)attributes.get("rsaRequired");

		if (rsaRequired != null) {
			setRsaRequired(rsaRequired);
		}

		String appointmentType = (String)attributes.get("appointmentType");

		if (appointmentType != null) {
			setAppointmentType(appointmentType);
		}

		Date orderDateIn = (Date)attributes.get("orderDateIn");

		if (orderDateIn != null) {
			setOrderDateIn(orderDateIn);
		}

		Date orderTimeIn = (Date)attributes.get("orderTimeIn");

		if (orderTimeIn != null) {
			setOrderTimeIn(orderTimeIn);
		}

		String serviceAdvisor = (String)attributes.get("serviceAdvisor");

		if (serviceAdvisor != null) {
			setServiceAdvisor(serviceAdvisor);
		}

		Long serviceAdvisorMobileNo = (Long)attributes.get(
				"serviceAdvisorMobileNo");

		if (serviceAdvisorMobileNo != null) {
			setServiceAdvisorMobileNo(serviceAdvisorMobileNo);
		}

		String soldByDealer = (String)attributes.get("soldByDealer");

		if (soldByDealer != null) {
			setSoldByDealer(soldByDealer);
		}

		String customerMobilityType = (String)attributes.get(
				"customerMobilityType");

		if (customerMobilityType != null) {
			setCustomerMobilityType(customerMobilityType);
		}

		String transactionNo = (String)attributes.get("transactionNo");

		if (transactionNo != null) {
			setTransactionNo(transactionNo);
		}

		String reasonForVisit = (String)attributes.get("reasonForVisit");

		if (reasonForVisit != null) {
			setReasonForVisit(reasonForVisit);
		}

		String extendedWarranty = (String)attributes.get("extendedWarranty");

		if (extendedWarranty != null) {
			setExtendedWarranty(extendedWarranty);
		}

		String servicePlan = (String)attributes.get("servicePlan");

		if (servicePlan != null) {
			setServicePlan(servicePlan);
		}

		String customerOrderDescription = (String)attributes.get(
				"customerOrderDescription");

		if (customerOrderDescription != null) {
			setCustomerOrderDescription(customerOrderDescription);
		}

		String complaint = (String)attributes.get("complaint");

		if (complaint != null) {
			setComplaint(complaint);
		}

		String workToBeDone = (String)attributes.get("workToBeDone");

		if (workToBeDone != null) {
			setWorkToBeDone(workToBeDone);
		}

		String instruction = (String)attributes.get("instruction");

		if (instruction != null) {
			setInstruction(instruction);
		}

		String carPicture = (String)attributes.get("carPicture");

		if (carPicture != null) {
			setCarPicture(carPicture);
		}

		String xDent = (String)attributes.get("xDent");

		if (xDent != null) {
			setXDent(xDent);
		}

		String scratch = (String)attributes.get("scratch");

		if (scratch != null) {
			setScratch(scratch);
		}

		String bodyDamage = (String)attributes.get("bodyDamage");

		if (bodyDamage != null) {
			setBodyDamage(bodyDamage);
		}

		String modificationOrNonOBMFittings = (String)attributes.get(
				"modificationOrNonOBMFittings");

		if (modificationOrNonOBMFittings != null) {
			setModificationOrNonOBMFittings(modificationOrNonOBMFittings);
		}

		String tyreCondition = (String)attributes.get("tyreCondition");

		if (tyreCondition != null) {
			setTyreCondition(tyreCondition);
		}

		String treadDepth = (String)attributes.get("treadDepth");

		if (treadDepth != null) {
			setTreadDepth(treadDepth);
		}

		String frontRight = (String)attributes.get("frontRight");

		if (frontRight != null) {
			setFrontRight(frontRight);
		}

		String frontLeft = (String)attributes.get("frontLeft");

		if (frontLeft != null) {
			setFrontLeft(frontLeft);
		}

		String rearRight = (String)attributes.get("rearRight");

		if (rearRight != null) {
			setRearRight(rearRight);
		}

		String rearLeft = (String)attributes.get("rearLeft");

		if (rearLeft != null) {
			setRearLeft(rearLeft);
		}

		String windowsGlazzing = (String)attributes.get("windowsGlazzing");

		if (windowsGlazzing != null) {
			setWindowsGlazzing(windowsGlazzing);
		}

		String wiperBlades = (String)attributes.get("wiperBlades");

		if (wiperBlades != null) {
			setWiperBlades(wiperBlades);
		}

		String lights = (String)attributes.get("lights");

		if (lights != null) {
			setLights(lights);
		}

		String exhaustSystem = (String)attributes.get("exhaustSystem");

		if (exhaustSystem != null) {
			setExhaustSystem(exhaustSystem);
		}

		String underbody = (String)attributes.get("underbody");

		if (underbody != null) {
			setUnderbody(underbody);
		}

		String engineCompartment = (String)attributes.get("engineCompartment");

		if (engineCompartment != null) {
			setEngineCompartment(engineCompartment);
		}

		String washing = (String)attributes.get("washing");

		if (washing != null) {
			setWashing(washing);
		}

		String oilLevel = (String)attributes.get("oilLevel");

		if (oilLevel != null) {
			setOilLevel(oilLevel);
		}

		String coolant = (String)attributes.get("coolant");

		if (coolant != null) {
			setCoolant(coolant);
		}

		String windshieldWasher = (String)attributes.get("windshieldWasher");

		if (windshieldWasher != null) {
			setWindshieldWasher(windshieldWasher);
		}

		String brakes = (String)attributes.get("brakes");

		if (brakes != null) {
			setBrakes(brakes);
		}

		String axle = (String)attributes.get("axle");

		if (axle != null) {
			setAxle(axle);
		}

		String monograms = (String)attributes.get("monograms");

		if (monograms != null) {
			setMonograms(monograms);
		}

		String polishing = (String)attributes.get("polishing");

		if (polishing != null) {
			setPolishing(polishing);
		}

		String fuel = (String)attributes.get("fuel");

		if (fuel != null) {
			setFuel(fuel);
		}

		String ownersManual = (String)attributes.get("ownersManual");

		if (ownersManual != null) {
			setOwnersManual(ownersManual);
		}

		String serScheMaintenanceManual = (String)attributes.get(
				"serScheMaintenanceManual");

		if (serScheMaintenanceManual != null) {
			setSerScheMaintenanceManual(serScheMaintenanceManual);
		}

		String infotainmentMmiNavigManual = (String)attributes.get(
				"infotainmentMmiNavigManual");

		if (infotainmentMmiNavigManual != null) {
			setInfotainmentMmiNavigManual(infotainmentMmiNavigManual);
		}

		String extWarrantyBook = (String)attributes.get("extWarrantyBook");

		if (extWarrantyBook != null) {
			setExtWarrantyBook(extWarrantyBook);
		}

		String quickReferenceGuide = (String)attributes.get(
				"quickReferenceGuide");

		if (quickReferenceGuide != null) {
			setQuickReferenceGuide(quickReferenceGuide);
		}

		String spareWheel = (String)attributes.get("spareWheel");

		if (spareWheel != null) {
			setSpareWheel(spareWheel);
		}

		String jackToolKits = (String)attributes.get("jackToolKits");

		if (jackToolKits != null) {
			setJackToolKits(jackToolKits);
		}

		String floorMat = (String)attributes.get("floorMat");

		if (floorMat != null) {
			setFloorMat(floorMat);
		}

		String mudFlaps = (String)attributes.get("mudFlaps");

		if (mudFlaps != null) {
			setMudFlaps(mudFlaps);
		}

		String warningTriangle = (String)attributes.get("warningTriangle");

		if (warningTriangle != null) {
			setWarningTriangle(warningTriangle);
		}

		String firstAidKit = (String)attributes.get("firstAidKit");

		if (firstAidKit != null) {
			setFirstAidKit(firstAidKit);
		}

		Long noOfKeys = (Long)attributes.get("noOfKeys");

		if (noOfKeys != null) {
			setNoOfKeys(noOfKeys);
		}

		String otherLooseItems = (String)attributes.get("otherLooseItems");

		if (otherLooseItems != null) {
			setOtherLooseItems(otherLooseItems);
		}

		String financialInformation = (String)attributes.get(
				"financialInformation");

		if (financialInformation != null) {
			setFinancialInformation(financialInformation);
		}

		String modeOfPayment = (String)attributes.get("modeOfPayment");

		if (modeOfPayment != null) {
			setModeOfPayment(modeOfPayment);
		}

		Long estimatedCost = (Long)attributes.get("estimatedCost");

		if (estimatedCost != null) {
			setEstimatedCost(estimatedCost);
		}

		String taxesAsApplicable = (String)attributes.get("taxesAsApplicable");

		if (taxesAsApplicable != null) {
			setTaxesAsApplicable(taxesAsApplicable);
		}

		Date estimatedDateOfDelivery = (Date)attributes.get(
				"estimatedDateOfDelivery");

		if (estimatedDateOfDelivery != null) {
			setEstimatedDateOfDelivery(estimatedDateOfDelivery);
		}

		String estimatedDeliveryTime = (String)attributes.get(
				"estimatedDeliveryTime");

		if (estimatedDeliveryTime != null) {
			setEstimatedDeliveryTime(estimatedDeliveryTime);
		}

		Long laborEstimate = (Long)attributes.get("laborEstimate");

		if (laborEstimate != null) {
			setLaborEstimate(laborEstimate);
		}

		Long parts = (Long)attributes.get("parts");

		if (parts != null) {
			setParts(parts);
		}

		String termsAndConditions = (String)attributes.get("termsAndConditions");

		if (termsAndConditions != null) {
			setTermsAndConditions(termsAndConditions);
		}

		String grantMyConsent = (String)attributes.get("grantMyConsent");

		if (grantMyConsent != null) {
			setGrantMyConsent(grantMyConsent);
		}

		String serviceAdvisotSignature = (String)attributes.get(
				"serviceAdvisotSignature");

		if (serviceAdvisotSignature != null) {
			setServiceAdvisotSignature(serviceAdvisotSignature);
		}

		String customerSignature = (String)attributes.get("customerSignature");

		if (customerSignature != null) {
			setCustomerSignature(customerSignature);
		}

		String remarksArea = (String)attributes.get("remarksArea");

		if (remarksArea != null) {
			setRemarksArea(remarksArea);
		}

		String termsStrictly = (String)attributes.get("termsStrictly");

		if (termsStrictly != null) {
			setTermsStrictly(termsStrictly);
		}

		String workshopCopy = (String)attributes.get("workshopCopy");

		if (workshopCopy != null) {
			setWorkshopCopy(workshopCopy);
		}

		String version = (String)attributes.get("version");

		if (version != null) {
			setVersion(version);
		}

		Boolean customerWaiting = (Boolean)attributes.get("customerWaiting");

		if (customerWaiting != null) {
			setCustomerWaiting(customerWaiting);
		}

		String campaign = (String)attributes.get("campaign");

		if (campaign != null) {
			setCampaign(campaign);
		}

		String dissNo = (String)attributes.get("dissNo");

		if (dissNo != null) {
			setDissNo(dissNo);
		}

		String descriptiveInformation = (String)attributes.get(
				"descriptiveInformation");

		if (descriptiveInformation != null) {
			setDescriptiveInformation(descriptiveInformation);
		}

		String timeStart = (String)attributes.get("timeStart");

		if (timeStart != null) {
			setTimeStart(timeStart);
		}

		String timeStop = (String)attributes.get("timeStop");

		if (timeStop != null) {
			setTimeStop(timeStop);
		}

		String nameOfTechnician = (String)attributes.get("nameOfTechnician");

		if (nameOfTechnician != null) {
			setNameOfTechnician(nameOfTechnician);
		}

		String technicianSignature = (String)attributes.get(
				"technicianSignature");

		if (technicianSignature != null) {
			setTechnicianSignature(technicianSignature);
		}

		String inventoryPartsJSONStr = (String)attributes.get(
				"inventoryPartsJSONStr");

		if (inventoryPartsJSONStr != null) {
			setInventoryPartsJSONStr(inventoryPartsJSONStr);
		}

		String partNumber = (String)attributes.get("partNumber");

		if (partNumber != null) {
			setPartNumber(partNumber);
		}

		String partDescription = (String)attributes.get("partDescription");

		if (partDescription != null) {
			setPartDescription(partDescription);
		}

		String partCatagory = (String)attributes.get("partCatagory");

		if (partCatagory != null) {
			setPartCatagory(partCatagory);
		}

		String internalPartsOrder = (String)attributes.get("internalPartsOrder");

		if (internalPartsOrder != null) {
			setInternalPartsOrder(internalPartsOrder);
		}

		String partQuantity = (String)attributes.get("partQuantity");

		if (partQuantity != null) {
			setPartQuantity(partQuantity);
		}

		String partRate = (String)attributes.get("partRate");

		if (partRate != null) {
			setPartRate(partRate);
		}

		String partCost = (String)attributes.get("partCost");

		if (partCost != null) {
			setPartCost(partCost);
		}

		String partTotal = (String)attributes.get("partTotal");

		if (partTotal != null) {
			setPartTotal(partTotal);
		}

		String partsJSONStr = (String)attributes.get("partsJSONStr");

		if (partsJSONStr != null) {
			setPartsJSONStr(partsJSONStr);
		}

		String labourDescription = (String)attributes.get("labourDescription");

		if (labourDescription != null) {
			setLabourDescription(labourDescription);
		}

		String labourCatagory = (String)attributes.get("labourCatagory");

		if (labourCatagory != null) {
			setLabourCatagory(labourCatagory);
		}

		String labourCode = (String)attributes.get("labourCode");

		if (labourCode != null) {
			setLabourCode(labourCode);
		}

		String timeUnit = (String)attributes.get("timeUnit");

		if (timeUnit != null) {
			setTimeUnit(timeUnit);
		}

		String hours = (String)attributes.get("hours");

		if (hours != null) {
			setHours(hours);
		}

		String labourRate = (String)attributes.get("labourRate");

		if (labourRate != null) {
			setLabourRate(labourRate);
		}

		Long labourCost = (Long)attributes.get("labourCost");

		if (labourCost != null) {
			setLabourCost(labourCost);
		}

		Long labourTotal = (Long)attributes.get("labourTotal");

		if (labourTotal != null) {
			setLabourTotal(labourTotal);
		}

		String labourJSONStr = (String)attributes.get("labourJSONStr");

		if (labourJSONStr != null) {
			setLabourJSONStr(labourJSONStr);
		}

		String additionalRepairsReqDesc = (String)attributes.get(
				"additionalRepairsReqDesc");

		if (additionalRepairsReqDesc != null) {
			setAdditionalRepairsReqDesc(additionalRepairsReqDesc);
		}

		String additionalRepairsReqPart = (String)attributes.get(
				"additionalRepairsReqPart");

		if (additionalRepairsReqPart != null) {
			setAdditionalRepairsReqPart(additionalRepairsReqPart);
		}

		String additionalRepairsReqLabour = (String)attributes.get(
				"additionalRepairsReqLabour");

		if (additionalRepairsReqLabour != null) {
			setAdditionalRepairsReqLabour(additionalRepairsReqLabour);
		}

		String additionalRepairsReqAuth = (String)attributes.get(
				"additionalRepairsReqAuth");

		if (additionalRepairsReqAuth != null) {
			setAdditionalRepairsReqAuth(additionalRepairsReqAuth);
		}

		Date additionalRepairsReqDT = (Date)attributes.get(
				"additionalRepairsReqDT");

		if (additionalRepairsReqDT != null) {
			setAdditionalRepairsReqDT(additionalRepairsReqDT);
		}

		Long roadTestKmOut = (Long)attributes.get("roadTestKmOut");

		if (roadTestKmOut != null) {
			setRoadTestKmOut(roadTestKmOut);
		}

		Long roadTestKmIn = (Long)attributes.get("roadTestKmIn");

		if (roadTestKmIn != null) {
			setRoadTestKmIn(roadTestKmIn);
		}

		Boolean allJobsAttended = (Boolean)attributes.get("allJobsAttended");

		if (allJobsAttended != null) {
			setAllJobsAttended(allJobsAttended);
		}

		Boolean accessoriesSettingAsOriginal = (Boolean)attributes.get(
				"accessoriesSettingAsOriginal");

		if (accessoriesSettingAsOriginal != null) {
			setAccessoriesSettingAsOriginal(accessoriesSettingAsOriginal);
		}

		String roadTestSignature = (String)attributes.get("roadTestSignature");

		if (roadTestSignature != null) {
			setRoadTestSignature(roadTestSignature);
		}

		Date roadTestDate = (Date)attributes.get("roadTestDate");

		if (roadTestDate != null) {
			setRoadTestDate(roadTestDate);
		}

		Boolean interiors = (Boolean)attributes.get("interiors");

		if (interiors != null) {
			setInteriors(interiors);
		}

		Boolean interiorsPolishing = (Boolean)attributes.get(
				"interiorsPolishing");

		if (interiorsPolishing != null) {
			setInteriorsPolishing(interiorsPolishing);
		}

		Boolean exteriors = (Boolean)attributes.get("exteriors");

		if (exteriors != null) {
			setExteriors(exteriors);
		}

		Boolean exteriorsPolishing = (Boolean)attributes.get(
				"exteriorsPolishing");

		if (exteriorsPolishing != null) {
			setExteriorsPolishing(exteriorsPolishing);
		}

		Boolean vacuumCleaned = (Boolean)attributes.get("vacuumCleaned");

		if (vacuumCleaned != null) {
			setVacuumCleaned(vacuumCleaned);
		}

		String washingCheckerSignature = (String)attributes.get(
				"washingCheckerSignature");

		if (washingCheckerSignature != null) {
			setWashingCheckerSignature(washingCheckerSignature);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Boolean toShow = (Boolean)attributes.get("toShow");

		if (toShow != null) {
			setToShow(toShow);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getOrgId() {
		return _orgId;
	}

	@Override
	public void setOrgId(long orgId) {
		_orgId = orgId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(long modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@JSON
	@Override
	public String getModifiedByName() {
		if (_modifiedByName == null) {
			return "";
		}
		else {
			return _modifiedByName;
		}
	}

	@Override
	public void setModifiedByName(String modifiedByName) {
		_modifiedByName = modifiedByName;
	}

	@JSON
	@Override
	public boolean getDeleted() {
		return _deleted;
	}

	@JSON
	@Override
	public boolean isDeleted() {
		return _deleted;
	}

	@Override
	public void setDeleted(boolean deleted) {
		_columnBitmask |= DELETED_COLUMN_BITMASK;

		if (!_setOriginalDeleted) {
			_setOriginalDeleted = true;

			_originalDeleted = _deleted;
		}

		_deleted = deleted;
	}

	public boolean getOriginalDeleted() {
		return _originalDeleted;
	}

	@JSON
	@Override
	public String getRepairOrderNo() {
		if (_repairOrderNo == null) {
			return "";
		}
		else {
			return _repairOrderNo;
		}
	}

	@Override
	public void setRepairOrderNo(String repairOrderNo) {
		_repairOrderNo = repairOrderNo;
	}

	@JSON
	@Override
	public String getDealerCode() {
		if (_dealerCode == null) {
			return "";
		}
		else {
			return _dealerCode;
		}
	}

	@Override
	public void setDealerCode(String dealerCode) {
		_dealerCode = dealerCode;
	}

	@JSON
	@Override
	public String getAuthorisedDealerInfo() {
		if (_authorisedDealerInfo == null) {
			return "";
		}
		else {
			return _authorisedDealerInfo;
		}
	}

	@Override
	public void setAuthorisedDealerInfo(String authorisedDealerInfo) {
		_authorisedDealerInfo = authorisedDealerInfo;
	}

	@JSON
	@Override
	public String getDealershipName() {
		if (_dealershipName == null) {
			return "";
		}
		else {
			return _dealershipName;
		}
	}

	@Override
	public void setDealershipName(String dealershipName) {
		_dealershipName = dealershipName;
	}

	@JSON
	@Override
	public String getDealershipAddress() {
		if (_dealershipAddress == null) {
			return "";
		}
		else {
			return _dealershipAddress;
		}
	}

	@Override
	public void setDealershipAddress(String dealershipAddress) {
		_dealershipAddress = dealershipAddress;
	}

	@JSON
	@Override
	public long getDealerShipPhoneNo() {
		return _dealerShipPhoneNo;
	}

	@Override
	public void setDealerShipPhoneNo(long dealerShipPhoneNo) {
		_dealerShipPhoneNo = dealerShipPhoneNo;
	}

	@JSON
	@Override
	public long getFaxNo() {
		return _faxNo;
	}

	@Override
	public void setFaxNo(long faxNo) {
		_faxNo = faxNo;
	}

	@JSON
	@Override
	public String getDealershipEmail() {
		if (_dealershipEmail == null) {
			return "";
		}
		else {
			return _dealershipEmail;
		}
	}

	@Override
	public void setDealershipEmail(String dealershipEmail) {
		_dealershipEmail = dealershipEmail;
	}

	@JSON
	@Override
	public String getGST() {
		if (_GST == null) {
			return "";
		}
		else {
			return _GST;
		}
	}

	@Override
	public void setGST(String GST) {
		_GST = GST;
	}

	@JSON
	@Override
	public String getCustomerName() {
		if (_customerName == null) {
			return "";
		}
		else {
			return _customerName;
		}
	}

	@Override
	public void setCustomerName(String customerName) {
		_customerName = customerName;
	}

	@JSON
	@Override
	public String getCustomerAddress() {
		if (_customerAddress == null) {
			return "";
		}
		else {
			return _customerAddress;
		}
	}

	@Override
	public void setCustomerAddress(String customerAddress) {
		_customerAddress = customerAddress;
	}

	@JSON
	@Override
	public long getCustomerMobileNo() {
		return _customerMobileNo;
	}

	@Override
	public void setCustomerMobileNo(long customerMobileNo) {
		_customerMobileNo = customerMobileNo;
	}

	@JSON
	@Override
	public String getCustomerEmailAddress() {
		if (_customerEmailAddress == null) {
			return "";
		}
		else {
			return _customerEmailAddress;
		}
	}

	@Override
	public void setCustomerEmailAddress(String customerEmailAddress) {
		_customerEmailAddress = customerEmailAddress;
	}

	@JSON
	@Override
	public String getContactPerson() {
		if (_contactPerson == null) {
			return "";
		}
		else {
			return _contactPerson;
		}
	}

	@Override
	public void setContactPerson(String contactPerson) {
		_contactPerson = contactPerson;
	}

	@JSON
	@Override
	public long getContactPersonPhone() {
		return _contactPersonPhone;
	}

	@Override
	public void setContactPersonPhone(long contactPersonPhone) {
		_contactPersonPhone = contactPersonPhone;
	}

	@JSON
	@Override
	public String getRegNo() {
		if (_regNo == null) {
			return "";
		}
		else {
			return _regNo;
		}
	}

	@Override
	public void setRegNo(String regNo) {
		_columnBitmask |= REGNO_COLUMN_BITMASK;

		if (_originalRegNo == null) {
			_originalRegNo = _regNo;
		}

		_regNo = regNo;
	}

	public String getOriginalRegNo() {
		return GetterUtil.getString(_originalRegNo);
	}

	@JSON
	@Override
	public String getVIN() {
		if (_VIN == null) {
			return "";
		}
		else {
			return _VIN;
		}
	}

	@Override
	public void setVIN(String VIN) {
		_columnBitmask |= VIN_COLUMN_BITMASK;

		if (_originalVIN == null) {
			_originalVIN = _VIN;
		}

		_VIN = VIN;
	}

	public String getOriginalVIN() {
		return GetterUtil.getString(_originalVIN);
	}

	@JSON
	@Override
	public Date getDateOfDelivery() {
		return _dateOfDelivery;
	}

	@Override
	public void setDateOfDelivery(Date dateOfDelivery) {
		_dateOfDelivery = dateOfDelivery;
	}

	@JSON
	@Override
	public long getKmsIn() {
		return _kmsIn;
	}

	@Override
	public void setKmsIn(long kmsIn) {
		_kmsIn = kmsIn;
	}

	@JSON
	@Override
	public String getModel() {
		if (_model == null) {
			return "";
		}
		else {
			return _model;
		}
	}

	@Override
	public void setModel(String model) {
		_model = model;
	}

	@JSON
	@Override
	public String getEngineNo() {
		if (_engineNo == null) {
			return "";
		}
		else {
			return _engineNo;
		}
	}

	@Override
	public void setEngineNo(String engineNo) {
		_engineNo = engineNo;
	}

	@JSON
	@Override
	public String getInsurancePolicyNo() {
		if (_insurancePolicyNo == null) {
			return "";
		}
		else {
			return _insurancePolicyNo;
		}
	}

	@Override
	public void setInsurancePolicyNo(String insurancePolicyNo) {
		_insurancePolicyNo = insurancePolicyNo;
	}

	@JSON
	@Override
	public Date getInsuranceExpiryDate() {
		return _insuranceExpiryDate;
	}

	@Override
	public void setInsuranceExpiryDate(Date insuranceExpiryDate) {
		_insuranceExpiryDate = insuranceExpiryDate;
	}

	@JSON
	@Override
	public boolean getRsaRequired() {
		return _rsaRequired;
	}

	@JSON
	@Override
	public boolean isRsaRequired() {
		return _rsaRequired;
	}

	@Override
	public void setRsaRequired(boolean rsaRequired) {
		_rsaRequired = rsaRequired;
	}

	@JSON
	@Override
	public String getAppointmentType() {
		if (_appointmentType == null) {
			return "";
		}
		else {
			return _appointmentType;
		}
	}

	@Override
	public void setAppointmentType(String appointmentType) {
		_appointmentType = appointmentType;
	}

	@JSON
	@Override
	public Date getOrderDateIn() {
		return _orderDateIn;
	}

	@Override
	public void setOrderDateIn(Date orderDateIn) {
		_orderDateIn = orderDateIn;
	}

	@JSON
	@Override
	public Date getOrderTimeIn() {
		return _orderTimeIn;
	}

	@Override
	public void setOrderTimeIn(Date orderTimeIn) {
		_orderTimeIn = orderTimeIn;
	}

	@JSON
	@Override
	public String getServiceAdvisor() {
		if (_serviceAdvisor == null) {
			return "";
		}
		else {
			return _serviceAdvisor;
		}
	}

	@Override
	public void setServiceAdvisor(String serviceAdvisor) {
		_serviceAdvisor = serviceAdvisor;
	}

	@JSON
	@Override
	public long getServiceAdvisorMobileNo() {
		return _serviceAdvisorMobileNo;
	}

	@Override
	public void setServiceAdvisorMobileNo(long serviceAdvisorMobileNo) {
		_serviceAdvisorMobileNo = serviceAdvisorMobileNo;
	}

	@JSON
	@Override
	public String getSoldByDealer() {
		if (_soldByDealer == null) {
			return "";
		}
		else {
			return _soldByDealer;
		}
	}

	@Override
	public void setSoldByDealer(String soldByDealer) {
		_soldByDealer = soldByDealer;
	}

	@JSON
	@Override
	public String getCustomerMobilityType() {
		if (_customerMobilityType == null) {
			return "";
		}
		else {
			return _customerMobilityType;
		}
	}

	@Override
	public void setCustomerMobilityType(String customerMobilityType) {
		_customerMobilityType = customerMobilityType;
	}

	@JSON
	@Override
	public String getTransactionNo() {
		if (_transactionNo == null) {
			return "";
		}
		else {
			return _transactionNo;
		}
	}

	@Override
	public void setTransactionNo(String transactionNo) {
		_transactionNo = transactionNo;
	}

	@JSON
	@Override
	public String getReasonForVisit() {
		if (_reasonForVisit == null) {
			return "";
		}
		else {
			return _reasonForVisit;
		}
	}

	@Override
	public void setReasonForVisit(String reasonForVisit) {
		_reasonForVisit = reasonForVisit;
	}

	@JSON
	@Override
	public String getExtendedWarranty() {
		if (_extendedWarranty == null) {
			return "";
		}
		else {
			return _extendedWarranty;
		}
	}

	@Override
	public void setExtendedWarranty(String extendedWarranty) {
		_extendedWarranty = extendedWarranty;
	}

	@JSON
	@Override
	public String getServicePlan() {
		if (_servicePlan == null) {
			return "";
		}
		else {
			return _servicePlan;
		}
	}

	@Override
	public void setServicePlan(String servicePlan) {
		_servicePlan = servicePlan;
	}

	@JSON
	@Override
	public String getCustomerOrderDescription() {
		if (_customerOrderDescription == null) {
			return "";
		}
		else {
			return _customerOrderDescription;
		}
	}

	@Override
	public void setCustomerOrderDescription(String customerOrderDescription) {
		_customerOrderDescription = customerOrderDescription;
	}

	@JSON
	@Override
	public String getComplaint() {
		if (_complaint == null) {
			return "";
		}
		else {
			return _complaint;
		}
	}

	@Override
	public void setComplaint(String complaint) {
		_complaint = complaint;
	}

	@JSON
	@Override
	public String getWorkToBeDone() {
		if (_workToBeDone == null) {
			return "";
		}
		else {
			return _workToBeDone;
		}
	}

	@Override
	public void setWorkToBeDone(String workToBeDone) {
		_workToBeDone = workToBeDone;
	}

	@JSON
	@Override
	public String getInstruction() {
		if (_instruction == null) {
			return "";
		}
		else {
			return _instruction;
		}
	}

	@Override
	public void setInstruction(String instruction) {
		_instruction = instruction;
	}

	@JSON
	@Override
	public String getCarPicture() {
		if (_carPicture == null) {
			return "";
		}
		else {
			return _carPicture;
		}
	}

	@Override
	public void setCarPicture(String carPicture) {
		_carPicture = carPicture;
	}

	@JSON
	@Override
	public String getXDent() {
		if (_xDent == null) {
			return "";
		}
		else {
			return _xDent;
		}
	}

	@Override
	public void setXDent(String xDent) {
		_xDent = xDent;
	}

	@JSON
	@Override
	public String getScratch() {
		if (_scratch == null) {
			return "";
		}
		else {
			return _scratch;
		}
	}

	@Override
	public void setScratch(String scratch) {
		_scratch = scratch;
	}

	@JSON
	@Override
	public String getBodyDamage() {
		if (_bodyDamage == null) {
			return "";
		}
		else {
			return _bodyDamage;
		}
	}

	@Override
	public void setBodyDamage(String bodyDamage) {
		_bodyDamage = bodyDamage;
	}

	@JSON
	@Override
	public String getModificationOrNonOBMFittings() {
		if (_modificationOrNonOBMFittings == null) {
			return "";
		}
		else {
			return _modificationOrNonOBMFittings;
		}
	}

	@Override
	public void setModificationOrNonOBMFittings(
		String modificationOrNonOBMFittings) {
		_modificationOrNonOBMFittings = modificationOrNonOBMFittings;
	}

	@JSON
	@Override
	public String getTyreCondition() {
		if (_tyreCondition == null) {
			return "";
		}
		else {
			return _tyreCondition;
		}
	}

	@Override
	public void setTyreCondition(String tyreCondition) {
		_tyreCondition = tyreCondition;
	}

	@JSON
	@Override
	public String getTreadDepth() {
		if (_treadDepth == null) {
			return "";
		}
		else {
			return _treadDepth;
		}
	}

	@Override
	public void setTreadDepth(String treadDepth) {
		_treadDepth = treadDepth;
	}

	@JSON
	@Override
	public String getFrontRight() {
		if (_frontRight == null) {
			return "";
		}
		else {
			return _frontRight;
		}
	}

	@Override
	public void setFrontRight(String frontRight) {
		_frontRight = frontRight;
	}

	@JSON
	@Override
	public String getFrontLeft() {
		if (_frontLeft == null) {
			return "";
		}
		else {
			return _frontLeft;
		}
	}

	@Override
	public void setFrontLeft(String frontLeft) {
		_frontLeft = frontLeft;
	}

	@JSON
	@Override
	public String getRearRight() {
		if (_rearRight == null) {
			return "";
		}
		else {
			return _rearRight;
		}
	}

	@Override
	public void setRearRight(String rearRight) {
		_rearRight = rearRight;
	}

	@JSON
	@Override
	public String getRearLeft() {
		if (_rearLeft == null) {
			return "";
		}
		else {
			return _rearLeft;
		}
	}

	@Override
	public void setRearLeft(String rearLeft) {
		_rearLeft = rearLeft;
	}

	@JSON
	@Override
	public String getWindowsGlazzing() {
		if (_windowsGlazzing == null) {
			return "";
		}
		else {
			return _windowsGlazzing;
		}
	}

	@Override
	public void setWindowsGlazzing(String windowsGlazzing) {
		_windowsGlazzing = windowsGlazzing;
	}

	@JSON
	@Override
	public String getWiperBlades() {
		if (_wiperBlades == null) {
			return "";
		}
		else {
			return _wiperBlades;
		}
	}

	@Override
	public void setWiperBlades(String wiperBlades) {
		_wiperBlades = wiperBlades;
	}

	@JSON
	@Override
	public String getLights() {
		if (_lights == null) {
			return "";
		}
		else {
			return _lights;
		}
	}

	@Override
	public void setLights(String lights) {
		_lights = lights;
	}

	@JSON
	@Override
	public String getExhaustSystem() {
		if (_exhaustSystem == null) {
			return "";
		}
		else {
			return _exhaustSystem;
		}
	}

	@Override
	public void setExhaustSystem(String exhaustSystem) {
		_exhaustSystem = exhaustSystem;
	}

	@JSON
	@Override
	public String getUnderbody() {
		if (_underbody == null) {
			return "";
		}
		else {
			return _underbody;
		}
	}

	@Override
	public void setUnderbody(String underbody) {
		_underbody = underbody;
	}

	@JSON
	@Override
	public String getEngineCompartment() {
		if (_engineCompartment == null) {
			return "";
		}
		else {
			return _engineCompartment;
		}
	}

	@Override
	public void setEngineCompartment(String engineCompartment) {
		_engineCompartment = engineCompartment;
	}

	@JSON
	@Override
	public String getWashing() {
		if (_washing == null) {
			return "";
		}
		else {
			return _washing;
		}
	}

	@Override
	public void setWashing(String washing) {
		_washing = washing;
	}

	@JSON
	@Override
	public String getOilLevel() {
		if (_oilLevel == null) {
			return "";
		}
		else {
			return _oilLevel;
		}
	}

	@Override
	public void setOilLevel(String oilLevel) {
		_oilLevel = oilLevel;
	}

	@JSON
	@Override
	public String getCoolant() {
		if (_coolant == null) {
			return "";
		}
		else {
			return _coolant;
		}
	}

	@Override
	public void setCoolant(String coolant) {
		_coolant = coolant;
	}

	@JSON
	@Override
	public String getWindshieldWasher() {
		if (_windshieldWasher == null) {
			return "";
		}
		else {
			return _windshieldWasher;
		}
	}

	@Override
	public void setWindshieldWasher(String windshieldWasher) {
		_windshieldWasher = windshieldWasher;
	}

	@JSON
	@Override
	public String getBrakes() {
		if (_brakes == null) {
			return "";
		}
		else {
			return _brakes;
		}
	}

	@Override
	public void setBrakes(String brakes) {
		_brakes = brakes;
	}

	@JSON
	@Override
	public String getAxle() {
		if (_axle == null) {
			return "";
		}
		else {
			return _axle;
		}
	}

	@Override
	public void setAxle(String axle) {
		_axle = axle;
	}

	@JSON
	@Override
	public String getMonograms() {
		if (_monograms == null) {
			return "";
		}
		else {
			return _monograms;
		}
	}

	@Override
	public void setMonograms(String monograms) {
		_monograms = monograms;
	}

	@JSON
	@Override
	public String getPolishing() {
		if (_polishing == null) {
			return "";
		}
		else {
			return _polishing;
		}
	}

	@Override
	public void setPolishing(String polishing) {
		_polishing = polishing;
	}

	@JSON
	@Override
	public String getFuel() {
		if (_fuel == null) {
			return "";
		}
		else {
			return _fuel;
		}
	}

	@Override
	public void setFuel(String fuel) {
		_fuel = fuel;
	}

	@JSON
	@Override
	public String getOwnersManual() {
		if (_ownersManual == null) {
			return "";
		}
		else {
			return _ownersManual;
		}
	}

	@Override
	public void setOwnersManual(String ownersManual) {
		_ownersManual = ownersManual;
	}

	@JSON
	@Override
	public String getSerScheMaintenanceManual() {
		if (_serScheMaintenanceManual == null) {
			return "";
		}
		else {
			return _serScheMaintenanceManual;
		}
	}

	@Override
	public void setSerScheMaintenanceManual(String serScheMaintenanceManual) {
		_serScheMaintenanceManual = serScheMaintenanceManual;
	}

	@JSON
	@Override
	public String getInfotainmentMmiNavigManual() {
		if (_infotainmentMmiNavigManual == null) {
			return "";
		}
		else {
			return _infotainmentMmiNavigManual;
		}
	}

	@Override
	public void setInfotainmentMmiNavigManual(String infotainmentMmiNavigManual) {
		_infotainmentMmiNavigManual = infotainmentMmiNavigManual;
	}

	@JSON
	@Override
	public String getExtWarrantyBook() {
		if (_extWarrantyBook == null) {
			return "";
		}
		else {
			return _extWarrantyBook;
		}
	}

	@Override
	public void setExtWarrantyBook(String extWarrantyBook) {
		_extWarrantyBook = extWarrantyBook;
	}

	@JSON
	@Override
	public String getQuickReferenceGuide() {
		if (_quickReferenceGuide == null) {
			return "";
		}
		else {
			return _quickReferenceGuide;
		}
	}

	@Override
	public void setQuickReferenceGuide(String quickReferenceGuide) {
		_quickReferenceGuide = quickReferenceGuide;
	}

	@JSON
	@Override
	public String getSpareWheel() {
		if (_spareWheel == null) {
			return "";
		}
		else {
			return _spareWheel;
		}
	}

	@Override
	public void setSpareWheel(String spareWheel) {
		_spareWheel = spareWheel;
	}

	@JSON
	@Override
	public String getJackToolKits() {
		if (_jackToolKits == null) {
			return "";
		}
		else {
			return _jackToolKits;
		}
	}

	@Override
	public void setJackToolKits(String jackToolKits) {
		_jackToolKits = jackToolKits;
	}

	@JSON
	@Override
	public String getFloorMat() {
		if (_floorMat == null) {
			return "";
		}
		else {
			return _floorMat;
		}
	}

	@Override
	public void setFloorMat(String floorMat) {
		_floorMat = floorMat;
	}

	@JSON
	@Override
	public String getMudFlaps() {
		if (_mudFlaps == null) {
			return "";
		}
		else {
			return _mudFlaps;
		}
	}

	@Override
	public void setMudFlaps(String mudFlaps) {
		_mudFlaps = mudFlaps;
	}

	@JSON
	@Override
	public String getWarningTriangle() {
		if (_warningTriangle == null) {
			return "";
		}
		else {
			return _warningTriangle;
		}
	}

	@Override
	public void setWarningTriangle(String warningTriangle) {
		_warningTriangle = warningTriangle;
	}

	@JSON
	@Override
	public String getFirstAidKit() {
		if (_firstAidKit == null) {
			return "";
		}
		else {
			return _firstAidKit;
		}
	}

	@Override
	public void setFirstAidKit(String firstAidKit) {
		_firstAidKit = firstAidKit;
	}

	@JSON
	@Override
	public long getNoOfKeys() {
		return _noOfKeys;
	}

	@Override
	public void setNoOfKeys(long noOfKeys) {
		_noOfKeys = noOfKeys;
	}

	@JSON
	@Override
	public String getOtherLooseItems() {
		if (_otherLooseItems == null) {
			return "";
		}
		else {
			return _otherLooseItems;
		}
	}

	@Override
	public void setOtherLooseItems(String otherLooseItems) {
		_otherLooseItems = otherLooseItems;
	}

	@JSON
	@Override
	public String getFinancialInformation() {
		if (_financialInformation == null) {
			return "";
		}
		else {
			return _financialInformation;
		}
	}

	@Override
	public void setFinancialInformation(String financialInformation) {
		_financialInformation = financialInformation;
	}

	@JSON
	@Override
	public String getModeOfPayment() {
		if (_modeOfPayment == null) {
			return "";
		}
		else {
			return _modeOfPayment;
		}
	}

	@Override
	public void setModeOfPayment(String modeOfPayment) {
		_modeOfPayment = modeOfPayment;
	}

	@JSON
	@Override
	public long getEstimatedCost() {
		return _estimatedCost;
	}

	@Override
	public void setEstimatedCost(long estimatedCost) {
		_estimatedCost = estimatedCost;
	}

	@JSON
	@Override
	public String getTaxesAsApplicable() {
		if (_taxesAsApplicable == null) {
			return "";
		}
		else {
			return _taxesAsApplicable;
		}
	}

	@Override
	public void setTaxesAsApplicable(String taxesAsApplicable) {
		_taxesAsApplicable = taxesAsApplicable;
	}

	@JSON
	@Override
	public Date getEstimatedDateOfDelivery() {
		return _estimatedDateOfDelivery;
	}

	@Override
	public void setEstimatedDateOfDelivery(Date estimatedDateOfDelivery) {
		_estimatedDateOfDelivery = estimatedDateOfDelivery;
	}

	@JSON
	@Override
	public String getEstimatedDeliveryTime() {
		if (_estimatedDeliveryTime == null) {
			return "";
		}
		else {
			return _estimatedDeliveryTime;
		}
	}

	@Override
	public void setEstimatedDeliveryTime(String estimatedDeliveryTime) {
		_estimatedDeliveryTime = estimatedDeliveryTime;
	}

	@JSON
	@Override
	public long getLaborEstimate() {
		return _laborEstimate;
	}

	@Override
	public void setLaborEstimate(long laborEstimate) {
		_laborEstimate = laborEstimate;
	}

	@JSON
	@Override
	public long getParts() {
		return _parts;
	}

	@Override
	public void setParts(long parts) {
		_parts = parts;
	}

	@JSON
	@Override
	public String getTermsAndConditions() {
		if (_termsAndConditions == null) {
			return "";
		}
		else {
			return _termsAndConditions;
		}
	}

	@Override
	public void setTermsAndConditions(String termsAndConditions) {
		_termsAndConditions = termsAndConditions;
	}

	@JSON
	@Override
	public String getGrantMyConsent() {
		if (_grantMyConsent == null) {
			return "";
		}
		else {
			return _grantMyConsent;
		}
	}

	@Override
	public void setGrantMyConsent(String grantMyConsent) {
		_grantMyConsent = grantMyConsent;
	}

	@JSON
	@Override
	public String getServiceAdvisotSignature() {
		if (_serviceAdvisotSignature == null) {
			return "";
		}
		else {
			return _serviceAdvisotSignature;
		}
	}

	@Override
	public void setServiceAdvisotSignature(String serviceAdvisotSignature) {
		_serviceAdvisotSignature = serviceAdvisotSignature;
	}

	@JSON
	@Override
	public String getCustomerSignature() {
		if (_customerSignature == null) {
			return "";
		}
		else {
			return _customerSignature;
		}
	}

	@Override
	public void setCustomerSignature(String customerSignature) {
		_customerSignature = customerSignature;
	}

	@JSON
	@Override
	public String getRemarksArea() {
		if (_remarksArea == null) {
			return "";
		}
		else {
			return _remarksArea;
		}
	}

	@Override
	public void setRemarksArea(String remarksArea) {
		_remarksArea = remarksArea;
	}

	@JSON
	@Override
	public String getTermsStrictly() {
		if (_termsStrictly == null) {
			return "";
		}
		else {
			return _termsStrictly;
		}
	}

	@Override
	public void setTermsStrictly(String termsStrictly) {
		_termsStrictly = termsStrictly;
	}

	@JSON
	@Override
	public String getWorkshopCopy() {
		if (_workshopCopy == null) {
			return "";
		}
		else {
			return _workshopCopy;
		}
	}

	@Override
	public void setWorkshopCopy(String workshopCopy) {
		_workshopCopy = workshopCopy;
	}

	@JSON
	@Override
	public String getVersion() {
		if (_version == null) {
			return "";
		}
		else {
			return _version;
		}
	}

	@Override
	public void setVersion(String version) {
		_version = version;
	}

	@JSON
	@Override
	public boolean getCustomerWaiting() {
		return _customerWaiting;
	}

	@JSON
	@Override
	public boolean isCustomerWaiting() {
		return _customerWaiting;
	}

	@Override
	public void setCustomerWaiting(boolean customerWaiting) {
		_customerWaiting = customerWaiting;
	}

	@JSON
	@Override
	public String getCampaign() {
		if (_campaign == null) {
			return "";
		}
		else {
			return _campaign;
		}
	}

	@Override
	public void setCampaign(String campaign) {
		_campaign = campaign;
	}

	@JSON
	@Override
	public String getDissNo() {
		if (_dissNo == null) {
			return "";
		}
		else {
			return _dissNo;
		}
	}

	@Override
	public void setDissNo(String dissNo) {
		_dissNo = dissNo;
	}

	@JSON
	@Override
	public String getDescriptiveInformation() {
		if (_descriptiveInformation == null) {
			return "";
		}
		else {
			return _descriptiveInformation;
		}
	}

	@Override
	public void setDescriptiveInformation(String descriptiveInformation) {
		_descriptiveInformation = descriptiveInformation;
	}

	@JSON
	@Override
	public String getTimeStart() {
		if (_timeStart == null) {
			return "";
		}
		else {
			return _timeStart;
		}
	}

	@Override
	public void setTimeStart(String timeStart) {
		_timeStart = timeStart;
	}

	@JSON
	@Override
	public String getTimeStop() {
		if (_timeStop == null) {
			return "";
		}
		else {
			return _timeStop;
		}
	}

	@Override
	public void setTimeStop(String timeStop) {
		_timeStop = timeStop;
	}

	@JSON
	@Override
	public String getNameOfTechnician() {
		if (_nameOfTechnician == null) {
			return "";
		}
		else {
			return _nameOfTechnician;
		}
	}

	@Override
	public void setNameOfTechnician(String nameOfTechnician) {
		_nameOfTechnician = nameOfTechnician;
	}

	@JSON
	@Override
	public String getTechnicianSignature() {
		if (_technicianSignature == null) {
			return "";
		}
		else {
			return _technicianSignature;
		}
	}

	@Override
	public void setTechnicianSignature(String technicianSignature) {
		_technicianSignature = technicianSignature;
	}

	@JSON
	@Override
	public String getInventoryPartsJSONStr() {
		if (_inventoryPartsJSONStr == null) {
			return "";
		}
		else {
			return _inventoryPartsJSONStr;
		}
	}

	@Override
	public void setInventoryPartsJSONStr(String inventoryPartsJSONStr) {
		_inventoryPartsJSONStr = inventoryPartsJSONStr;
	}

	@JSON
	@Override
	public String getPartNumber() {
		if (_partNumber == null) {
			return "";
		}
		else {
			return _partNumber;
		}
	}

	@Override
	public void setPartNumber(String partNumber) {
		_partNumber = partNumber;
	}

	@JSON
	@Override
	public String getPartDescription() {
		if (_partDescription == null) {
			return "";
		}
		else {
			return _partDescription;
		}
	}

	@Override
	public void setPartDescription(String partDescription) {
		_partDescription = partDescription;
	}

	@JSON
	@Override
	public String getPartCatagory() {
		if (_partCatagory == null) {
			return "";
		}
		else {
			return _partCatagory;
		}
	}

	@Override
	public void setPartCatagory(String partCatagory) {
		_partCatagory = partCatagory;
	}

	@JSON
	@Override
	public String getInternalPartsOrder() {
		if (_internalPartsOrder == null) {
			return "";
		}
		else {
			return _internalPartsOrder;
		}
	}

	@Override
	public void setInternalPartsOrder(String internalPartsOrder) {
		_internalPartsOrder = internalPartsOrder;
	}

	@JSON
	@Override
	public String getPartQuantity() {
		if (_partQuantity == null) {
			return "";
		}
		else {
			return _partQuantity;
		}
	}

	@Override
	public void setPartQuantity(String partQuantity) {
		_partQuantity = partQuantity;
	}

	@JSON
	@Override
	public String getPartRate() {
		if (_partRate == null) {
			return "";
		}
		else {
			return _partRate;
		}
	}

	@Override
	public void setPartRate(String partRate) {
		_partRate = partRate;
	}

	@JSON
	@Override
	public String getPartCost() {
		if (_partCost == null) {
			return "";
		}
		else {
			return _partCost;
		}
	}

	@Override
	public void setPartCost(String partCost) {
		_partCost = partCost;
	}

	@JSON
	@Override
	public String getPartTotal() {
		if (_partTotal == null) {
			return "";
		}
		else {
			return _partTotal;
		}
	}

	@Override
	public void setPartTotal(String partTotal) {
		_partTotal = partTotal;
	}

	@JSON
	@Override
	public String getPartsJSONStr() {
		if (_partsJSONStr == null) {
			return "";
		}
		else {
			return _partsJSONStr;
		}
	}

	@Override
	public void setPartsJSONStr(String partsJSONStr) {
		_partsJSONStr = partsJSONStr;
	}

	@JSON
	@Override
	public String getLabourDescription() {
		if (_labourDescription == null) {
			return "";
		}
		else {
			return _labourDescription;
		}
	}

	@Override
	public void setLabourDescription(String labourDescription) {
		_labourDescription = labourDescription;
	}

	@JSON
	@Override
	public String getLabourCatagory() {
		if (_labourCatagory == null) {
			return "";
		}
		else {
			return _labourCatagory;
		}
	}

	@Override
	public void setLabourCatagory(String labourCatagory) {
		_labourCatagory = labourCatagory;
	}

	@JSON
	@Override
	public String getLabourCode() {
		if (_labourCode == null) {
			return "";
		}
		else {
			return _labourCode;
		}
	}

	@Override
	public void setLabourCode(String labourCode) {
		_labourCode = labourCode;
	}

	@JSON
	@Override
	public String getTimeUnit() {
		if (_timeUnit == null) {
			return "";
		}
		else {
			return _timeUnit;
		}
	}

	@Override
	public void setTimeUnit(String timeUnit) {
		_timeUnit = timeUnit;
	}

	@JSON
	@Override
	public String getHours() {
		if (_hours == null) {
			return "";
		}
		else {
			return _hours;
		}
	}

	@Override
	public void setHours(String hours) {
		_hours = hours;
	}

	@JSON
	@Override
	public String getLabourRate() {
		if (_labourRate == null) {
			return "";
		}
		else {
			return _labourRate;
		}
	}

	@Override
	public void setLabourRate(String labourRate) {
		_labourRate = labourRate;
	}

	@JSON
	@Override
	public long getLabourCost() {
		return _labourCost;
	}

	@Override
	public void setLabourCost(long labourCost) {
		_labourCost = labourCost;
	}

	@JSON
	@Override
	public long getLabourTotal() {
		return _labourTotal;
	}

	@Override
	public void setLabourTotal(long labourTotal) {
		_labourTotal = labourTotal;
	}

	@JSON
	@Override
	public String getLabourJSONStr() {
		if (_labourJSONStr == null) {
			return "";
		}
		else {
			return _labourJSONStr;
		}
	}

	@Override
	public void setLabourJSONStr(String labourJSONStr) {
		_labourJSONStr = labourJSONStr;
	}

	@JSON
	@Override
	public String getAdditionalRepairsReqDesc() {
		if (_additionalRepairsReqDesc == null) {
			return "";
		}
		else {
			return _additionalRepairsReqDesc;
		}
	}

	@Override
	public void setAdditionalRepairsReqDesc(String additionalRepairsReqDesc) {
		_additionalRepairsReqDesc = additionalRepairsReqDesc;
	}

	@JSON
	@Override
	public String getAdditionalRepairsReqPart() {
		if (_additionalRepairsReqPart == null) {
			return "";
		}
		else {
			return _additionalRepairsReqPart;
		}
	}

	@Override
	public void setAdditionalRepairsReqPart(String additionalRepairsReqPart) {
		_additionalRepairsReqPart = additionalRepairsReqPart;
	}

	@JSON
	@Override
	public String getAdditionalRepairsReqLabour() {
		if (_additionalRepairsReqLabour == null) {
			return "";
		}
		else {
			return _additionalRepairsReqLabour;
		}
	}

	@Override
	public void setAdditionalRepairsReqLabour(String additionalRepairsReqLabour) {
		_additionalRepairsReqLabour = additionalRepairsReqLabour;
	}

	@JSON
	@Override
	public String getAdditionalRepairsReqAuth() {
		if (_additionalRepairsReqAuth == null) {
			return "";
		}
		else {
			return _additionalRepairsReqAuth;
		}
	}

	@Override
	public void setAdditionalRepairsReqAuth(String additionalRepairsReqAuth) {
		_additionalRepairsReqAuth = additionalRepairsReqAuth;
	}

	@JSON
	@Override
	public Date getAdditionalRepairsReqDT() {
		return _additionalRepairsReqDT;
	}

	@Override
	public void setAdditionalRepairsReqDT(Date additionalRepairsReqDT) {
		_additionalRepairsReqDT = additionalRepairsReqDT;
	}

	@JSON
	@Override
	public long getRoadTestKmOut() {
		return _roadTestKmOut;
	}

	@Override
	public void setRoadTestKmOut(long roadTestKmOut) {
		_roadTestKmOut = roadTestKmOut;
	}

	@JSON
	@Override
	public long getRoadTestKmIn() {
		return _roadTestKmIn;
	}

	@Override
	public void setRoadTestKmIn(long roadTestKmIn) {
		_roadTestKmIn = roadTestKmIn;
	}

	@JSON
	@Override
	public boolean getAllJobsAttended() {
		return _allJobsAttended;
	}

	@JSON
	@Override
	public boolean isAllJobsAttended() {
		return _allJobsAttended;
	}

	@Override
	public void setAllJobsAttended(boolean allJobsAttended) {
		_allJobsAttended = allJobsAttended;
	}

	@JSON
	@Override
	public boolean getAccessoriesSettingAsOriginal() {
		return _accessoriesSettingAsOriginal;
	}

	@JSON
	@Override
	public boolean isAccessoriesSettingAsOriginal() {
		return _accessoriesSettingAsOriginal;
	}

	@Override
	public void setAccessoriesSettingAsOriginal(
		boolean accessoriesSettingAsOriginal) {
		_accessoriesSettingAsOriginal = accessoriesSettingAsOriginal;
	}

	@JSON
	@Override
	public String getRoadTestSignature() {
		if (_roadTestSignature == null) {
			return "";
		}
		else {
			return _roadTestSignature;
		}
	}

	@Override
	public void setRoadTestSignature(String roadTestSignature) {
		_roadTestSignature = roadTestSignature;
	}

	@JSON
	@Override
	public Date getRoadTestDate() {
		return _roadTestDate;
	}

	@Override
	public void setRoadTestDate(Date roadTestDate) {
		_roadTestDate = roadTestDate;
	}

	@JSON
	@Override
	public boolean getInteriors() {
		return _interiors;
	}

	@JSON
	@Override
	public boolean isInteriors() {
		return _interiors;
	}

	@Override
	public void setInteriors(boolean interiors) {
		_interiors = interiors;
	}

	@JSON
	@Override
	public boolean getInteriorsPolishing() {
		return _interiorsPolishing;
	}

	@JSON
	@Override
	public boolean isInteriorsPolishing() {
		return _interiorsPolishing;
	}

	@Override
	public void setInteriorsPolishing(boolean interiorsPolishing) {
		_interiorsPolishing = interiorsPolishing;
	}

	@JSON
	@Override
	public boolean getExteriors() {
		return _exteriors;
	}

	@JSON
	@Override
	public boolean isExteriors() {
		return _exteriors;
	}

	@Override
	public void setExteriors(boolean exteriors) {
		_exteriors = exteriors;
	}

	@JSON
	@Override
	public boolean getExteriorsPolishing() {
		return _exteriorsPolishing;
	}

	@JSON
	@Override
	public boolean isExteriorsPolishing() {
		return _exteriorsPolishing;
	}

	@Override
	public void setExteriorsPolishing(boolean exteriorsPolishing) {
		_exteriorsPolishing = exteriorsPolishing;
	}

	@JSON
	@Override
	public boolean getVacuumCleaned() {
		return _vacuumCleaned;
	}

	@JSON
	@Override
	public boolean isVacuumCleaned() {
		return _vacuumCleaned;
	}

	@Override
	public void setVacuumCleaned(boolean vacuumCleaned) {
		_vacuumCleaned = vacuumCleaned;
	}

	@JSON
	@Override
	public String getWashingCheckerSignature() {
		if (_washingCheckerSignature == null) {
			return "";
		}
		else {
			return _washingCheckerSignature;
		}
	}

	@Override
	public void setWashingCheckerSignature(String washingCheckerSignature) {
		_washingCheckerSignature = washingCheckerSignature;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return "";
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	@Override
	public boolean getToShow() {
		return _toShow;
	}

	@JSON
	@Override
	public boolean isToShow() {
		return _toShow;
	}

	@Override
	public void setToShow(boolean toShow) {
		_columnBitmask |= TOSHOW_COLUMN_BITMASK;

		if (!_setOriginalToShow) {
			_setOriginalToShow = true;

			_originalToShow = _toShow;
		}

		_toShow = toShow;
	}

	public boolean getOriginalToShow() {
		return _originalToShow;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				DmsPoc.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DmsPoc.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DmsPoc toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DmsPoc)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DmsPocImpl dmsPocImpl = new DmsPocImpl();

		dmsPocImpl.setUuid(getUuid());
		dmsPocImpl.setId(getId());
		dmsPocImpl.setGroupId(getGroupId());
		dmsPocImpl.setOrgId(getOrgId());
		dmsPocImpl.setCompanyId(getCompanyId());
		dmsPocImpl.setUserId(getUserId());
		dmsPocImpl.setUserName(getUserName());
		dmsPocImpl.setCreateDate(getCreateDate());
		dmsPocImpl.setModifiedDate(getModifiedDate());
		dmsPocImpl.setModifiedBy(getModifiedBy());
		dmsPocImpl.setModifiedByName(getModifiedByName());
		dmsPocImpl.setDeleted(isDeleted());
		dmsPocImpl.setRepairOrderNo(getRepairOrderNo());
		dmsPocImpl.setDealerCode(getDealerCode());
		dmsPocImpl.setAuthorisedDealerInfo(getAuthorisedDealerInfo());
		dmsPocImpl.setDealershipName(getDealershipName());
		dmsPocImpl.setDealershipAddress(getDealershipAddress());
		dmsPocImpl.setDealerShipPhoneNo(getDealerShipPhoneNo());
		dmsPocImpl.setFaxNo(getFaxNo());
		dmsPocImpl.setDealershipEmail(getDealershipEmail());
		dmsPocImpl.setGST(getGST());
		dmsPocImpl.setCustomerName(getCustomerName());
		dmsPocImpl.setCustomerAddress(getCustomerAddress());
		dmsPocImpl.setCustomerMobileNo(getCustomerMobileNo());
		dmsPocImpl.setCustomerEmailAddress(getCustomerEmailAddress());
		dmsPocImpl.setContactPerson(getContactPerson());
		dmsPocImpl.setContactPersonPhone(getContactPersonPhone());
		dmsPocImpl.setRegNo(getRegNo());
		dmsPocImpl.setVIN(getVIN());
		dmsPocImpl.setDateOfDelivery(getDateOfDelivery());
		dmsPocImpl.setKmsIn(getKmsIn());
		dmsPocImpl.setModel(getModel());
		dmsPocImpl.setEngineNo(getEngineNo());
		dmsPocImpl.setInsurancePolicyNo(getInsurancePolicyNo());
		dmsPocImpl.setInsuranceExpiryDate(getInsuranceExpiryDate());
		dmsPocImpl.setRsaRequired(isRsaRequired());
		dmsPocImpl.setAppointmentType(getAppointmentType());
		dmsPocImpl.setOrderDateIn(getOrderDateIn());
		dmsPocImpl.setOrderTimeIn(getOrderTimeIn());
		dmsPocImpl.setServiceAdvisor(getServiceAdvisor());
		dmsPocImpl.setServiceAdvisorMobileNo(getServiceAdvisorMobileNo());
		dmsPocImpl.setSoldByDealer(getSoldByDealer());
		dmsPocImpl.setCustomerMobilityType(getCustomerMobilityType());
		dmsPocImpl.setTransactionNo(getTransactionNo());
		dmsPocImpl.setReasonForVisit(getReasonForVisit());
		dmsPocImpl.setExtendedWarranty(getExtendedWarranty());
		dmsPocImpl.setServicePlan(getServicePlan());
		dmsPocImpl.setCustomerOrderDescription(getCustomerOrderDescription());
		dmsPocImpl.setComplaint(getComplaint());
		dmsPocImpl.setWorkToBeDone(getWorkToBeDone());
		dmsPocImpl.setInstruction(getInstruction());
		dmsPocImpl.setCarPicture(getCarPicture());
		dmsPocImpl.setXDent(getXDent());
		dmsPocImpl.setScratch(getScratch());
		dmsPocImpl.setBodyDamage(getBodyDamage());
		dmsPocImpl.setModificationOrNonOBMFittings(getModificationOrNonOBMFittings());
		dmsPocImpl.setTyreCondition(getTyreCondition());
		dmsPocImpl.setTreadDepth(getTreadDepth());
		dmsPocImpl.setFrontRight(getFrontRight());
		dmsPocImpl.setFrontLeft(getFrontLeft());
		dmsPocImpl.setRearRight(getRearRight());
		dmsPocImpl.setRearLeft(getRearLeft());
		dmsPocImpl.setWindowsGlazzing(getWindowsGlazzing());
		dmsPocImpl.setWiperBlades(getWiperBlades());
		dmsPocImpl.setLights(getLights());
		dmsPocImpl.setExhaustSystem(getExhaustSystem());
		dmsPocImpl.setUnderbody(getUnderbody());
		dmsPocImpl.setEngineCompartment(getEngineCompartment());
		dmsPocImpl.setWashing(getWashing());
		dmsPocImpl.setOilLevel(getOilLevel());
		dmsPocImpl.setCoolant(getCoolant());
		dmsPocImpl.setWindshieldWasher(getWindshieldWasher());
		dmsPocImpl.setBrakes(getBrakes());
		dmsPocImpl.setAxle(getAxle());
		dmsPocImpl.setMonograms(getMonograms());
		dmsPocImpl.setPolishing(getPolishing());
		dmsPocImpl.setFuel(getFuel());
		dmsPocImpl.setOwnersManual(getOwnersManual());
		dmsPocImpl.setSerScheMaintenanceManual(getSerScheMaintenanceManual());
		dmsPocImpl.setInfotainmentMmiNavigManual(getInfotainmentMmiNavigManual());
		dmsPocImpl.setExtWarrantyBook(getExtWarrantyBook());
		dmsPocImpl.setQuickReferenceGuide(getQuickReferenceGuide());
		dmsPocImpl.setSpareWheel(getSpareWheel());
		dmsPocImpl.setJackToolKits(getJackToolKits());
		dmsPocImpl.setFloorMat(getFloorMat());
		dmsPocImpl.setMudFlaps(getMudFlaps());
		dmsPocImpl.setWarningTriangle(getWarningTriangle());
		dmsPocImpl.setFirstAidKit(getFirstAidKit());
		dmsPocImpl.setNoOfKeys(getNoOfKeys());
		dmsPocImpl.setOtherLooseItems(getOtherLooseItems());
		dmsPocImpl.setFinancialInformation(getFinancialInformation());
		dmsPocImpl.setModeOfPayment(getModeOfPayment());
		dmsPocImpl.setEstimatedCost(getEstimatedCost());
		dmsPocImpl.setTaxesAsApplicable(getTaxesAsApplicable());
		dmsPocImpl.setEstimatedDateOfDelivery(getEstimatedDateOfDelivery());
		dmsPocImpl.setEstimatedDeliveryTime(getEstimatedDeliveryTime());
		dmsPocImpl.setLaborEstimate(getLaborEstimate());
		dmsPocImpl.setParts(getParts());
		dmsPocImpl.setTermsAndConditions(getTermsAndConditions());
		dmsPocImpl.setGrantMyConsent(getGrantMyConsent());
		dmsPocImpl.setServiceAdvisotSignature(getServiceAdvisotSignature());
		dmsPocImpl.setCustomerSignature(getCustomerSignature());
		dmsPocImpl.setRemarksArea(getRemarksArea());
		dmsPocImpl.setTermsStrictly(getTermsStrictly());
		dmsPocImpl.setWorkshopCopy(getWorkshopCopy());
		dmsPocImpl.setVersion(getVersion());
		dmsPocImpl.setCustomerWaiting(isCustomerWaiting());
		dmsPocImpl.setCampaign(getCampaign());
		dmsPocImpl.setDissNo(getDissNo());
		dmsPocImpl.setDescriptiveInformation(getDescriptiveInformation());
		dmsPocImpl.setTimeStart(getTimeStart());
		dmsPocImpl.setTimeStop(getTimeStop());
		dmsPocImpl.setNameOfTechnician(getNameOfTechnician());
		dmsPocImpl.setTechnicianSignature(getTechnicianSignature());
		dmsPocImpl.setInventoryPartsJSONStr(getInventoryPartsJSONStr());
		dmsPocImpl.setPartNumber(getPartNumber());
		dmsPocImpl.setPartDescription(getPartDescription());
		dmsPocImpl.setPartCatagory(getPartCatagory());
		dmsPocImpl.setInternalPartsOrder(getInternalPartsOrder());
		dmsPocImpl.setPartQuantity(getPartQuantity());
		dmsPocImpl.setPartRate(getPartRate());
		dmsPocImpl.setPartCost(getPartCost());
		dmsPocImpl.setPartTotal(getPartTotal());
		dmsPocImpl.setPartsJSONStr(getPartsJSONStr());
		dmsPocImpl.setLabourDescription(getLabourDescription());
		dmsPocImpl.setLabourCatagory(getLabourCatagory());
		dmsPocImpl.setLabourCode(getLabourCode());
		dmsPocImpl.setTimeUnit(getTimeUnit());
		dmsPocImpl.setHours(getHours());
		dmsPocImpl.setLabourRate(getLabourRate());
		dmsPocImpl.setLabourCost(getLabourCost());
		dmsPocImpl.setLabourTotal(getLabourTotal());
		dmsPocImpl.setLabourJSONStr(getLabourJSONStr());
		dmsPocImpl.setAdditionalRepairsReqDesc(getAdditionalRepairsReqDesc());
		dmsPocImpl.setAdditionalRepairsReqPart(getAdditionalRepairsReqPart());
		dmsPocImpl.setAdditionalRepairsReqLabour(getAdditionalRepairsReqLabour());
		dmsPocImpl.setAdditionalRepairsReqAuth(getAdditionalRepairsReqAuth());
		dmsPocImpl.setAdditionalRepairsReqDT(getAdditionalRepairsReqDT());
		dmsPocImpl.setRoadTestKmOut(getRoadTestKmOut());
		dmsPocImpl.setRoadTestKmIn(getRoadTestKmIn());
		dmsPocImpl.setAllJobsAttended(isAllJobsAttended());
		dmsPocImpl.setAccessoriesSettingAsOriginal(isAccessoriesSettingAsOriginal());
		dmsPocImpl.setRoadTestSignature(getRoadTestSignature());
		dmsPocImpl.setRoadTestDate(getRoadTestDate());
		dmsPocImpl.setInteriors(isInteriors());
		dmsPocImpl.setInteriorsPolishing(isInteriorsPolishing());
		dmsPocImpl.setExteriors(isExteriors());
		dmsPocImpl.setExteriorsPolishing(isExteriorsPolishing());
		dmsPocImpl.setVacuumCleaned(isVacuumCleaned());
		dmsPocImpl.setWashingCheckerSignature(getWashingCheckerSignature());
		dmsPocImpl.setStatus(getStatus());
		dmsPocImpl.setToShow(isToShow());

		dmsPocImpl.resetOriginalValues();

		return dmsPocImpl;
	}

	@Override
	public int compareTo(DmsPoc dmsPoc) {
		long primaryKey = dmsPoc.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DmsPoc)) {
			return false;
		}

		DmsPoc dmsPoc = (DmsPoc)obj;

		long primaryKey = dmsPoc.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		DmsPocModelImpl dmsPocModelImpl = this;

		dmsPocModelImpl._originalUuid = dmsPocModelImpl._uuid;

		dmsPocModelImpl._originalGroupId = dmsPocModelImpl._groupId;

		dmsPocModelImpl._setOriginalGroupId = false;

		dmsPocModelImpl._originalCompanyId = dmsPocModelImpl._companyId;

		dmsPocModelImpl._setOriginalCompanyId = false;

		dmsPocModelImpl._setModifiedDate = false;

		dmsPocModelImpl._originalDeleted = dmsPocModelImpl._deleted;

		dmsPocModelImpl._setOriginalDeleted = false;

		dmsPocModelImpl._originalRegNo = dmsPocModelImpl._regNo;

		dmsPocModelImpl._originalVIN = dmsPocModelImpl._VIN;

		dmsPocModelImpl._originalToShow = dmsPocModelImpl._toShow;

		dmsPocModelImpl._setOriginalToShow = false;

		dmsPocModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DmsPoc> toCacheModel() {
		DmsPocCacheModel dmsPocCacheModel = new DmsPocCacheModel();

		dmsPocCacheModel.uuid = getUuid();

		String uuid = dmsPocCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			dmsPocCacheModel.uuid = null;
		}

		dmsPocCacheModel.id = getId();

		dmsPocCacheModel.groupId = getGroupId();

		dmsPocCacheModel.orgId = getOrgId();

		dmsPocCacheModel.companyId = getCompanyId();

		dmsPocCacheModel.userId = getUserId();

		dmsPocCacheModel.userName = getUserName();

		String userName = dmsPocCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			dmsPocCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			dmsPocCacheModel.createDate = createDate.getTime();
		}
		else {
			dmsPocCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dmsPocCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dmsPocCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dmsPocCacheModel.modifiedBy = getModifiedBy();

		dmsPocCacheModel.modifiedByName = getModifiedByName();

		String modifiedByName = dmsPocCacheModel.modifiedByName;

		if ((modifiedByName != null) && (modifiedByName.length() == 0)) {
			dmsPocCacheModel.modifiedByName = null;
		}

		dmsPocCacheModel.deleted = isDeleted();

		dmsPocCacheModel.repairOrderNo = getRepairOrderNo();

		String repairOrderNo = dmsPocCacheModel.repairOrderNo;

		if ((repairOrderNo != null) && (repairOrderNo.length() == 0)) {
			dmsPocCacheModel.repairOrderNo = null;
		}

		dmsPocCacheModel.dealerCode = getDealerCode();

		String dealerCode = dmsPocCacheModel.dealerCode;

		if ((dealerCode != null) && (dealerCode.length() == 0)) {
			dmsPocCacheModel.dealerCode = null;
		}

		dmsPocCacheModel.authorisedDealerInfo = getAuthorisedDealerInfo();

		String authorisedDealerInfo = dmsPocCacheModel.authorisedDealerInfo;

		if ((authorisedDealerInfo != null) &&
				(authorisedDealerInfo.length() == 0)) {
			dmsPocCacheModel.authorisedDealerInfo = null;
		}

		dmsPocCacheModel.dealershipName = getDealershipName();

		String dealershipName = dmsPocCacheModel.dealershipName;

		if ((dealershipName != null) && (dealershipName.length() == 0)) {
			dmsPocCacheModel.dealershipName = null;
		}

		dmsPocCacheModel.dealershipAddress = getDealershipAddress();

		String dealershipAddress = dmsPocCacheModel.dealershipAddress;

		if ((dealershipAddress != null) && (dealershipAddress.length() == 0)) {
			dmsPocCacheModel.dealershipAddress = null;
		}

		dmsPocCacheModel.dealerShipPhoneNo = getDealerShipPhoneNo();

		dmsPocCacheModel.faxNo = getFaxNo();

		dmsPocCacheModel.dealershipEmail = getDealershipEmail();

		String dealershipEmail = dmsPocCacheModel.dealershipEmail;

		if ((dealershipEmail != null) && (dealershipEmail.length() == 0)) {
			dmsPocCacheModel.dealershipEmail = null;
		}

		dmsPocCacheModel.GST = getGST();

		String GST = dmsPocCacheModel.GST;

		if ((GST != null) && (GST.length() == 0)) {
			dmsPocCacheModel.GST = null;
		}

		dmsPocCacheModel.customerName = getCustomerName();

		String customerName = dmsPocCacheModel.customerName;

		if ((customerName != null) && (customerName.length() == 0)) {
			dmsPocCacheModel.customerName = null;
		}

		dmsPocCacheModel.customerAddress = getCustomerAddress();

		String customerAddress = dmsPocCacheModel.customerAddress;

		if ((customerAddress != null) && (customerAddress.length() == 0)) {
			dmsPocCacheModel.customerAddress = null;
		}

		dmsPocCacheModel.customerMobileNo = getCustomerMobileNo();

		dmsPocCacheModel.customerEmailAddress = getCustomerEmailAddress();

		String customerEmailAddress = dmsPocCacheModel.customerEmailAddress;

		if ((customerEmailAddress != null) &&
				(customerEmailAddress.length() == 0)) {
			dmsPocCacheModel.customerEmailAddress = null;
		}

		dmsPocCacheModel.contactPerson = getContactPerson();

		String contactPerson = dmsPocCacheModel.contactPerson;

		if ((contactPerson != null) && (contactPerson.length() == 0)) {
			dmsPocCacheModel.contactPerson = null;
		}

		dmsPocCacheModel.contactPersonPhone = getContactPersonPhone();

		dmsPocCacheModel.regNo = getRegNo();

		String regNo = dmsPocCacheModel.regNo;

		if ((regNo != null) && (regNo.length() == 0)) {
			dmsPocCacheModel.regNo = null;
		}

		dmsPocCacheModel.VIN = getVIN();

		String VIN = dmsPocCacheModel.VIN;

		if ((VIN != null) && (VIN.length() == 0)) {
			dmsPocCacheModel.VIN = null;
		}

		Date dateOfDelivery = getDateOfDelivery();

		if (dateOfDelivery != null) {
			dmsPocCacheModel.dateOfDelivery = dateOfDelivery.getTime();
		}
		else {
			dmsPocCacheModel.dateOfDelivery = Long.MIN_VALUE;
		}

		dmsPocCacheModel.kmsIn = getKmsIn();

		dmsPocCacheModel.model = getModel();

		String model = dmsPocCacheModel.model;

		if ((model != null) && (model.length() == 0)) {
			dmsPocCacheModel.model = null;
		}

		dmsPocCacheModel.engineNo = getEngineNo();

		String engineNo = dmsPocCacheModel.engineNo;

		if ((engineNo != null) && (engineNo.length() == 0)) {
			dmsPocCacheModel.engineNo = null;
		}

		dmsPocCacheModel.insurancePolicyNo = getInsurancePolicyNo();

		String insurancePolicyNo = dmsPocCacheModel.insurancePolicyNo;

		if ((insurancePolicyNo != null) && (insurancePolicyNo.length() == 0)) {
			dmsPocCacheModel.insurancePolicyNo = null;
		}

		Date insuranceExpiryDate = getInsuranceExpiryDate();

		if (insuranceExpiryDate != null) {
			dmsPocCacheModel.insuranceExpiryDate = insuranceExpiryDate.getTime();
		}
		else {
			dmsPocCacheModel.insuranceExpiryDate = Long.MIN_VALUE;
		}

		dmsPocCacheModel.rsaRequired = isRsaRequired();

		dmsPocCacheModel.appointmentType = getAppointmentType();

		String appointmentType = dmsPocCacheModel.appointmentType;

		if ((appointmentType != null) && (appointmentType.length() == 0)) {
			dmsPocCacheModel.appointmentType = null;
		}

		Date orderDateIn = getOrderDateIn();

		if (orderDateIn != null) {
			dmsPocCacheModel.orderDateIn = orderDateIn.getTime();
		}
		else {
			dmsPocCacheModel.orderDateIn = Long.MIN_VALUE;
		}

		Date orderTimeIn = getOrderTimeIn();

		if (orderTimeIn != null) {
			dmsPocCacheModel.orderTimeIn = orderTimeIn.getTime();
		}
		else {
			dmsPocCacheModel.orderTimeIn = Long.MIN_VALUE;
		}

		dmsPocCacheModel.serviceAdvisor = getServiceAdvisor();

		String serviceAdvisor = dmsPocCacheModel.serviceAdvisor;

		if ((serviceAdvisor != null) && (serviceAdvisor.length() == 0)) {
			dmsPocCacheModel.serviceAdvisor = null;
		}

		dmsPocCacheModel.serviceAdvisorMobileNo = getServiceAdvisorMobileNo();

		dmsPocCacheModel.soldByDealer = getSoldByDealer();

		String soldByDealer = dmsPocCacheModel.soldByDealer;

		if ((soldByDealer != null) && (soldByDealer.length() == 0)) {
			dmsPocCacheModel.soldByDealer = null;
		}

		dmsPocCacheModel.customerMobilityType = getCustomerMobilityType();

		String customerMobilityType = dmsPocCacheModel.customerMobilityType;

		if ((customerMobilityType != null) &&
				(customerMobilityType.length() == 0)) {
			dmsPocCacheModel.customerMobilityType = null;
		}

		dmsPocCacheModel.transactionNo = getTransactionNo();

		String transactionNo = dmsPocCacheModel.transactionNo;

		if ((transactionNo != null) && (transactionNo.length() == 0)) {
			dmsPocCacheModel.transactionNo = null;
		}

		dmsPocCacheModel.reasonForVisit = getReasonForVisit();

		String reasonForVisit = dmsPocCacheModel.reasonForVisit;

		if ((reasonForVisit != null) && (reasonForVisit.length() == 0)) {
			dmsPocCacheModel.reasonForVisit = null;
		}

		dmsPocCacheModel.extendedWarranty = getExtendedWarranty();

		String extendedWarranty = dmsPocCacheModel.extendedWarranty;

		if ((extendedWarranty != null) && (extendedWarranty.length() == 0)) {
			dmsPocCacheModel.extendedWarranty = null;
		}

		dmsPocCacheModel.servicePlan = getServicePlan();

		String servicePlan = dmsPocCacheModel.servicePlan;

		if ((servicePlan != null) && (servicePlan.length() == 0)) {
			dmsPocCacheModel.servicePlan = null;
		}

		dmsPocCacheModel.customerOrderDescription = getCustomerOrderDescription();

		String customerOrderDescription = dmsPocCacheModel.customerOrderDescription;

		if ((customerOrderDescription != null) &&
				(customerOrderDescription.length() == 0)) {
			dmsPocCacheModel.customerOrderDescription = null;
		}

		dmsPocCacheModel.complaint = getComplaint();

		String complaint = dmsPocCacheModel.complaint;

		if ((complaint != null) && (complaint.length() == 0)) {
			dmsPocCacheModel.complaint = null;
		}

		dmsPocCacheModel.workToBeDone = getWorkToBeDone();

		String workToBeDone = dmsPocCacheModel.workToBeDone;

		if ((workToBeDone != null) && (workToBeDone.length() == 0)) {
			dmsPocCacheModel.workToBeDone = null;
		}

		dmsPocCacheModel.instruction = getInstruction();

		String instruction = dmsPocCacheModel.instruction;

		if ((instruction != null) && (instruction.length() == 0)) {
			dmsPocCacheModel.instruction = null;
		}

		dmsPocCacheModel.carPicture = getCarPicture();

		String carPicture = dmsPocCacheModel.carPicture;

		if ((carPicture != null) && (carPicture.length() == 0)) {
			dmsPocCacheModel.carPicture = null;
		}

		dmsPocCacheModel.xDent = getXDent();

		String xDent = dmsPocCacheModel.xDent;

		if ((xDent != null) && (xDent.length() == 0)) {
			dmsPocCacheModel.xDent = null;
		}

		dmsPocCacheModel.scratch = getScratch();

		String scratch = dmsPocCacheModel.scratch;

		if ((scratch != null) && (scratch.length() == 0)) {
			dmsPocCacheModel.scratch = null;
		}

		dmsPocCacheModel.bodyDamage = getBodyDamage();

		String bodyDamage = dmsPocCacheModel.bodyDamage;

		if ((bodyDamage != null) && (bodyDamage.length() == 0)) {
			dmsPocCacheModel.bodyDamage = null;
		}

		dmsPocCacheModel.modificationOrNonOBMFittings = getModificationOrNonOBMFittings();

		String modificationOrNonOBMFittings = dmsPocCacheModel.modificationOrNonOBMFittings;

		if ((modificationOrNonOBMFittings != null) &&
				(modificationOrNonOBMFittings.length() == 0)) {
			dmsPocCacheModel.modificationOrNonOBMFittings = null;
		}

		dmsPocCacheModel.tyreCondition = getTyreCondition();

		String tyreCondition = dmsPocCacheModel.tyreCondition;

		if ((tyreCondition != null) && (tyreCondition.length() == 0)) {
			dmsPocCacheModel.tyreCondition = null;
		}

		dmsPocCacheModel.treadDepth = getTreadDepth();

		String treadDepth = dmsPocCacheModel.treadDepth;

		if ((treadDepth != null) && (treadDepth.length() == 0)) {
			dmsPocCacheModel.treadDepth = null;
		}

		dmsPocCacheModel.frontRight = getFrontRight();

		String frontRight = dmsPocCacheModel.frontRight;

		if ((frontRight != null) && (frontRight.length() == 0)) {
			dmsPocCacheModel.frontRight = null;
		}

		dmsPocCacheModel.frontLeft = getFrontLeft();

		String frontLeft = dmsPocCacheModel.frontLeft;

		if ((frontLeft != null) && (frontLeft.length() == 0)) {
			dmsPocCacheModel.frontLeft = null;
		}

		dmsPocCacheModel.rearRight = getRearRight();

		String rearRight = dmsPocCacheModel.rearRight;

		if ((rearRight != null) && (rearRight.length() == 0)) {
			dmsPocCacheModel.rearRight = null;
		}

		dmsPocCacheModel.rearLeft = getRearLeft();

		String rearLeft = dmsPocCacheModel.rearLeft;

		if ((rearLeft != null) && (rearLeft.length() == 0)) {
			dmsPocCacheModel.rearLeft = null;
		}

		dmsPocCacheModel.windowsGlazzing = getWindowsGlazzing();

		String windowsGlazzing = dmsPocCacheModel.windowsGlazzing;

		if ((windowsGlazzing != null) && (windowsGlazzing.length() == 0)) {
			dmsPocCacheModel.windowsGlazzing = null;
		}

		dmsPocCacheModel.wiperBlades = getWiperBlades();

		String wiperBlades = dmsPocCacheModel.wiperBlades;

		if ((wiperBlades != null) && (wiperBlades.length() == 0)) {
			dmsPocCacheModel.wiperBlades = null;
		}

		dmsPocCacheModel.lights = getLights();

		String lights = dmsPocCacheModel.lights;

		if ((lights != null) && (lights.length() == 0)) {
			dmsPocCacheModel.lights = null;
		}

		dmsPocCacheModel.exhaustSystem = getExhaustSystem();

		String exhaustSystem = dmsPocCacheModel.exhaustSystem;

		if ((exhaustSystem != null) && (exhaustSystem.length() == 0)) {
			dmsPocCacheModel.exhaustSystem = null;
		}

		dmsPocCacheModel.underbody = getUnderbody();

		String underbody = dmsPocCacheModel.underbody;

		if ((underbody != null) && (underbody.length() == 0)) {
			dmsPocCacheModel.underbody = null;
		}

		dmsPocCacheModel.engineCompartment = getEngineCompartment();

		String engineCompartment = dmsPocCacheModel.engineCompartment;

		if ((engineCompartment != null) && (engineCompartment.length() == 0)) {
			dmsPocCacheModel.engineCompartment = null;
		}

		dmsPocCacheModel.washing = getWashing();

		String washing = dmsPocCacheModel.washing;

		if ((washing != null) && (washing.length() == 0)) {
			dmsPocCacheModel.washing = null;
		}

		dmsPocCacheModel.oilLevel = getOilLevel();

		String oilLevel = dmsPocCacheModel.oilLevel;

		if ((oilLevel != null) && (oilLevel.length() == 0)) {
			dmsPocCacheModel.oilLevel = null;
		}

		dmsPocCacheModel.coolant = getCoolant();

		String coolant = dmsPocCacheModel.coolant;

		if ((coolant != null) && (coolant.length() == 0)) {
			dmsPocCacheModel.coolant = null;
		}

		dmsPocCacheModel.windshieldWasher = getWindshieldWasher();

		String windshieldWasher = dmsPocCacheModel.windshieldWasher;

		if ((windshieldWasher != null) && (windshieldWasher.length() == 0)) {
			dmsPocCacheModel.windshieldWasher = null;
		}

		dmsPocCacheModel.brakes = getBrakes();

		String brakes = dmsPocCacheModel.brakes;

		if ((brakes != null) && (brakes.length() == 0)) {
			dmsPocCacheModel.brakes = null;
		}

		dmsPocCacheModel.axle = getAxle();

		String axle = dmsPocCacheModel.axle;

		if ((axle != null) && (axle.length() == 0)) {
			dmsPocCacheModel.axle = null;
		}

		dmsPocCacheModel.monograms = getMonograms();

		String monograms = dmsPocCacheModel.monograms;

		if ((monograms != null) && (monograms.length() == 0)) {
			dmsPocCacheModel.monograms = null;
		}

		dmsPocCacheModel.polishing = getPolishing();

		String polishing = dmsPocCacheModel.polishing;

		if ((polishing != null) && (polishing.length() == 0)) {
			dmsPocCacheModel.polishing = null;
		}

		dmsPocCacheModel.fuel = getFuel();

		String fuel = dmsPocCacheModel.fuel;

		if ((fuel != null) && (fuel.length() == 0)) {
			dmsPocCacheModel.fuel = null;
		}

		dmsPocCacheModel.ownersManual = getOwnersManual();

		String ownersManual = dmsPocCacheModel.ownersManual;

		if ((ownersManual != null) && (ownersManual.length() == 0)) {
			dmsPocCacheModel.ownersManual = null;
		}

		dmsPocCacheModel.serScheMaintenanceManual = getSerScheMaintenanceManual();

		String serScheMaintenanceManual = dmsPocCacheModel.serScheMaintenanceManual;

		if ((serScheMaintenanceManual != null) &&
				(serScheMaintenanceManual.length() == 0)) {
			dmsPocCacheModel.serScheMaintenanceManual = null;
		}

		dmsPocCacheModel.infotainmentMmiNavigManual = getInfotainmentMmiNavigManual();

		String infotainmentMmiNavigManual = dmsPocCacheModel.infotainmentMmiNavigManual;

		if ((infotainmentMmiNavigManual != null) &&
				(infotainmentMmiNavigManual.length() == 0)) {
			dmsPocCacheModel.infotainmentMmiNavigManual = null;
		}

		dmsPocCacheModel.extWarrantyBook = getExtWarrantyBook();

		String extWarrantyBook = dmsPocCacheModel.extWarrantyBook;

		if ((extWarrantyBook != null) && (extWarrantyBook.length() == 0)) {
			dmsPocCacheModel.extWarrantyBook = null;
		}

		dmsPocCacheModel.quickReferenceGuide = getQuickReferenceGuide();

		String quickReferenceGuide = dmsPocCacheModel.quickReferenceGuide;

		if ((quickReferenceGuide != null) &&
				(quickReferenceGuide.length() == 0)) {
			dmsPocCacheModel.quickReferenceGuide = null;
		}

		dmsPocCacheModel.spareWheel = getSpareWheel();

		String spareWheel = dmsPocCacheModel.spareWheel;

		if ((spareWheel != null) && (spareWheel.length() == 0)) {
			dmsPocCacheModel.spareWheel = null;
		}

		dmsPocCacheModel.jackToolKits = getJackToolKits();

		String jackToolKits = dmsPocCacheModel.jackToolKits;

		if ((jackToolKits != null) && (jackToolKits.length() == 0)) {
			dmsPocCacheModel.jackToolKits = null;
		}

		dmsPocCacheModel.floorMat = getFloorMat();

		String floorMat = dmsPocCacheModel.floorMat;

		if ((floorMat != null) && (floorMat.length() == 0)) {
			dmsPocCacheModel.floorMat = null;
		}

		dmsPocCacheModel.mudFlaps = getMudFlaps();

		String mudFlaps = dmsPocCacheModel.mudFlaps;

		if ((mudFlaps != null) && (mudFlaps.length() == 0)) {
			dmsPocCacheModel.mudFlaps = null;
		}

		dmsPocCacheModel.warningTriangle = getWarningTriangle();

		String warningTriangle = dmsPocCacheModel.warningTriangle;

		if ((warningTriangle != null) && (warningTriangle.length() == 0)) {
			dmsPocCacheModel.warningTriangle = null;
		}

		dmsPocCacheModel.firstAidKit = getFirstAidKit();

		String firstAidKit = dmsPocCacheModel.firstAidKit;

		if ((firstAidKit != null) && (firstAidKit.length() == 0)) {
			dmsPocCacheModel.firstAidKit = null;
		}

		dmsPocCacheModel.noOfKeys = getNoOfKeys();

		dmsPocCacheModel.otherLooseItems = getOtherLooseItems();

		String otherLooseItems = dmsPocCacheModel.otherLooseItems;

		if ((otherLooseItems != null) && (otherLooseItems.length() == 0)) {
			dmsPocCacheModel.otherLooseItems = null;
		}

		dmsPocCacheModel.financialInformation = getFinancialInformation();

		String financialInformation = dmsPocCacheModel.financialInformation;

		if ((financialInformation != null) &&
				(financialInformation.length() == 0)) {
			dmsPocCacheModel.financialInformation = null;
		}

		dmsPocCacheModel.modeOfPayment = getModeOfPayment();

		String modeOfPayment = dmsPocCacheModel.modeOfPayment;

		if ((modeOfPayment != null) && (modeOfPayment.length() == 0)) {
			dmsPocCacheModel.modeOfPayment = null;
		}

		dmsPocCacheModel.estimatedCost = getEstimatedCost();

		dmsPocCacheModel.taxesAsApplicable = getTaxesAsApplicable();

		String taxesAsApplicable = dmsPocCacheModel.taxesAsApplicable;

		if ((taxesAsApplicable != null) && (taxesAsApplicable.length() == 0)) {
			dmsPocCacheModel.taxesAsApplicable = null;
		}

		Date estimatedDateOfDelivery = getEstimatedDateOfDelivery();

		if (estimatedDateOfDelivery != null) {
			dmsPocCacheModel.estimatedDateOfDelivery = estimatedDateOfDelivery.getTime();
		}
		else {
			dmsPocCacheModel.estimatedDateOfDelivery = Long.MIN_VALUE;
		}

		dmsPocCacheModel.estimatedDeliveryTime = getEstimatedDeliveryTime();

		String estimatedDeliveryTime = dmsPocCacheModel.estimatedDeliveryTime;

		if ((estimatedDeliveryTime != null) &&
				(estimatedDeliveryTime.length() == 0)) {
			dmsPocCacheModel.estimatedDeliveryTime = null;
		}

		dmsPocCacheModel.laborEstimate = getLaborEstimate();

		dmsPocCacheModel.parts = getParts();

		dmsPocCacheModel.termsAndConditions = getTermsAndConditions();

		String termsAndConditions = dmsPocCacheModel.termsAndConditions;

		if ((termsAndConditions != null) && (termsAndConditions.length() == 0)) {
			dmsPocCacheModel.termsAndConditions = null;
		}

		dmsPocCacheModel.grantMyConsent = getGrantMyConsent();

		String grantMyConsent = dmsPocCacheModel.grantMyConsent;

		if ((grantMyConsent != null) && (grantMyConsent.length() == 0)) {
			dmsPocCacheModel.grantMyConsent = null;
		}

		dmsPocCacheModel.serviceAdvisotSignature = getServiceAdvisotSignature();

		String serviceAdvisotSignature = dmsPocCacheModel.serviceAdvisotSignature;

		if ((serviceAdvisotSignature != null) &&
				(serviceAdvisotSignature.length() == 0)) {
			dmsPocCacheModel.serviceAdvisotSignature = null;
		}

		dmsPocCacheModel.customerSignature = getCustomerSignature();

		String customerSignature = dmsPocCacheModel.customerSignature;

		if ((customerSignature != null) && (customerSignature.length() == 0)) {
			dmsPocCacheModel.customerSignature = null;
		}

		dmsPocCacheModel.remarksArea = getRemarksArea();

		String remarksArea = dmsPocCacheModel.remarksArea;

		if ((remarksArea != null) && (remarksArea.length() == 0)) {
			dmsPocCacheModel.remarksArea = null;
		}

		dmsPocCacheModel.termsStrictly = getTermsStrictly();

		String termsStrictly = dmsPocCacheModel.termsStrictly;

		if ((termsStrictly != null) && (termsStrictly.length() == 0)) {
			dmsPocCacheModel.termsStrictly = null;
		}

		dmsPocCacheModel.workshopCopy = getWorkshopCopy();

		String workshopCopy = dmsPocCacheModel.workshopCopy;

		if ((workshopCopy != null) && (workshopCopy.length() == 0)) {
			dmsPocCacheModel.workshopCopy = null;
		}

		dmsPocCacheModel.version = getVersion();

		String version = dmsPocCacheModel.version;

		if ((version != null) && (version.length() == 0)) {
			dmsPocCacheModel.version = null;
		}

		dmsPocCacheModel.customerWaiting = isCustomerWaiting();

		dmsPocCacheModel.campaign = getCampaign();

		String campaign = dmsPocCacheModel.campaign;

		if ((campaign != null) && (campaign.length() == 0)) {
			dmsPocCacheModel.campaign = null;
		}

		dmsPocCacheModel.dissNo = getDissNo();

		String dissNo = dmsPocCacheModel.dissNo;

		if ((dissNo != null) && (dissNo.length() == 0)) {
			dmsPocCacheModel.dissNo = null;
		}

		dmsPocCacheModel.descriptiveInformation = getDescriptiveInformation();

		String descriptiveInformation = dmsPocCacheModel.descriptiveInformation;

		if ((descriptiveInformation != null) &&
				(descriptiveInformation.length() == 0)) {
			dmsPocCacheModel.descriptiveInformation = null;
		}

		dmsPocCacheModel.timeStart = getTimeStart();

		String timeStart = dmsPocCacheModel.timeStart;

		if ((timeStart != null) && (timeStart.length() == 0)) {
			dmsPocCacheModel.timeStart = null;
		}

		dmsPocCacheModel.timeStop = getTimeStop();

		String timeStop = dmsPocCacheModel.timeStop;

		if ((timeStop != null) && (timeStop.length() == 0)) {
			dmsPocCacheModel.timeStop = null;
		}

		dmsPocCacheModel.nameOfTechnician = getNameOfTechnician();

		String nameOfTechnician = dmsPocCacheModel.nameOfTechnician;

		if ((nameOfTechnician != null) && (nameOfTechnician.length() == 0)) {
			dmsPocCacheModel.nameOfTechnician = null;
		}

		dmsPocCacheModel.technicianSignature = getTechnicianSignature();

		String technicianSignature = dmsPocCacheModel.technicianSignature;

		if ((technicianSignature != null) &&
				(technicianSignature.length() == 0)) {
			dmsPocCacheModel.technicianSignature = null;
		}

		dmsPocCacheModel.inventoryPartsJSONStr = getInventoryPartsJSONStr();

		String inventoryPartsJSONStr = dmsPocCacheModel.inventoryPartsJSONStr;

		if ((inventoryPartsJSONStr != null) &&
				(inventoryPartsJSONStr.length() == 0)) {
			dmsPocCacheModel.inventoryPartsJSONStr = null;
		}

		dmsPocCacheModel.partNumber = getPartNumber();

		String partNumber = dmsPocCacheModel.partNumber;

		if ((partNumber != null) && (partNumber.length() == 0)) {
			dmsPocCacheModel.partNumber = null;
		}

		dmsPocCacheModel.partDescription = getPartDescription();

		String partDescription = dmsPocCacheModel.partDescription;

		if ((partDescription != null) && (partDescription.length() == 0)) {
			dmsPocCacheModel.partDescription = null;
		}

		dmsPocCacheModel.partCatagory = getPartCatagory();

		String partCatagory = dmsPocCacheModel.partCatagory;

		if ((partCatagory != null) && (partCatagory.length() == 0)) {
			dmsPocCacheModel.partCatagory = null;
		}

		dmsPocCacheModel.internalPartsOrder = getInternalPartsOrder();

		String internalPartsOrder = dmsPocCacheModel.internalPartsOrder;

		if ((internalPartsOrder != null) && (internalPartsOrder.length() == 0)) {
			dmsPocCacheModel.internalPartsOrder = null;
		}

		dmsPocCacheModel.partQuantity = getPartQuantity();

		String partQuantity = dmsPocCacheModel.partQuantity;

		if ((partQuantity != null) && (partQuantity.length() == 0)) {
			dmsPocCacheModel.partQuantity = null;
		}

		dmsPocCacheModel.partRate = getPartRate();

		String partRate = dmsPocCacheModel.partRate;

		if ((partRate != null) && (partRate.length() == 0)) {
			dmsPocCacheModel.partRate = null;
		}

		dmsPocCacheModel.partCost = getPartCost();

		String partCost = dmsPocCacheModel.partCost;

		if ((partCost != null) && (partCost.length() == 0)) {
			dmsPocCacheModel.partCost = null;
		}

		dmsPocCacheModel.partTotal = getPartTotal();

		String partTotal = dmsPocCacheModel.partTotal;

		if ((partTotal != null) && (partTotal.length() == 0)) {
			dmsPocCacheModel.partTotal = null;
		}

		dmsPocCacheModel.partsJSONStr = getPartsJSONStr();

		String partsJSONStr = dmsPocCacheModel.partsJSONStr;

		if ((partsJSONStr != null) && (partsJSONStr.length() == 0)) {
			dmsPocCacheModel.partsJSONStr = null;
		}

		dmsPocCacheModel.labourDescription = getLabourDescription();

		String labourDescription = dmsPocCacheModel.labourDescription;

		if ((labourDescription != null) && (labourDescription.length() == 0)) {
			dmsPocCacheModel.labourDescription = null;
		}

		dmsPocCacheModel.labourCatagory = getLabourCatagory();

		String labourCatagory = dmsPocCacheModel.labourCatagory;

		if ((labourCatagory != null) && (labourCatagory.length() == 0)) {
			dmsPocCacheModel.labourCatagory = null;
		}

		dmsPocCacheModel.labourCode = getLabourCode();

		String labourCode = dmsPocCacheModel.labourCode;

		if ((labourCode != null) && (labourCode.length() == 0)) {
			dmsPocCacheModel.labourCode = null;
		}

		dmsPocCacheModel.timeUnit = getTimeUnit();

		String timeUnit = dmsPocCacheModel.timeUnit;

		if ((timeUnit != null) && (timeUnit.length() == 0)) {
			dmsPocCacheModel.timeUnit = null;
		}

		dmsPocCacheModel.hours = getHours();

		String hours = dmsPocCacheModel.hours;

		if ((hours != null) && (hours.length() == 0)) {
			dmsPocCacheModel.hours = null;
		}

		dmsPocCacheModel.labourRate = getLabourRate();

		String labourRate = dmsPocCacheModel.labourRate;

		if ((labourRate != null) && (labourRate.length() == 0)) {
			dmsPocCacheModel.labourRate = null;
		}

		dmsPocCacheModel.labourCost = getLabourCost();

		dmsPocCacheModel.labourTotal = getLabourTotal();

		dmsPocCacheModel.labourJSONStr = getLabourJSONStr();

		String labourJSONStr = dmsPocCacheModel.labourJSONStr;

		if ((labourJSONStr != null) && (labourJSONStr.length() == 0)) {
			dmsPocCacheModel.labourJSONStr = null;
		}

		dmsPocCacheModel.additionalRepairsReqDesc = getAdditionalRepairsReqDesc();

		String additionalRepairsReqDesc = dmsPocCacheModel.additionalRepairsReqDesc;

		if ((additionalRepairsReqDesc != null) &&
				(additionalRepairsReqDesc.length() == 0)) {
			dmsPocCacheModel.additionalRepairsReqDesc = null;
		}

		dmsPocCacheModel.additionalRepairsReqPart = getAdditionalRepairsReqPart();

		String additionalRepairsReqPart = dmsPocCacheModel.additionalRepairsReqPart;

		if ((additionalRepairsReqPart != null) &&
				(additionalRepairsReqPart.length() == 0)) {
			dmsPocCacheModel.additionalRepairsReqPart = null;
		}

		dmsPocCacheModel.additionalRepairsReqLabour = getAdditionalRepairsReqLabour();

		String additionalRepairsReqLabour = dmsPocCacheModel.additionalRepairsReqLabour;

		if ((additionalRepairsReqLabour != null) &&
				(additionalRepairsReqLabour.length() == 0)) {
			dmsPocCacheModel.additionalRepairsReqLabour = null;
		}

		dmsPocCacheModel.additionalRepairsReqAuth = getAdditionalRepairsReqAuth();

		String additionalRepairsReqAuth = dmsPocCacheModel.additionalRepairsReqAuth;

		if ((additionalRepairsReqAuth != null) &&
				(additionalRepairsReqAuth.length() == 0)) {
			dmsPocCacheModel.additionalRepairsReqAuth = null;
		}

		Date additionalRepairsReqDT = getAdditionalRepairsReqDT();

		if (additionalRepairsReqDT != null) {
			dmsPocCacheModel.additionalRepairsReqDT = additionalRepairsReqDT.getTime();
		}
		else {
			dmsPocCacheModel.additionalRepairsReqDT = Long.MIN_VALUE;
		}

		dmsPocCacheModel.roadTestKmOut = getRoadTestKmOut();

		dmsPocCacheModel.roadTestKmIn = getRoadTestKmIn();

		dmsPocCacheModel.allJobsAttended = isAllJobsAttended();

		dmsPocCacheModel.accessoriesSettingAsOriginal = isAccessoriesSettingAsOriginal();

		dmsPocCacheModel.roadTestSignature = getRoadTestSignature();

		String roadTestSignature = dmsPocCacheModel.roadTestSignature;

		if ((roadTestSignature != null) && (roadTestSignature.length() == 0)) {
			dmsPocCacheModel.roadTestSignature = null;
		}

		Date roadTestDate = getRoadTestDate();

		if (roadTestDate != null) {
			dmsPocCacheModel.roadTestDate = roadTestDate.getTime();
		}
		else {
			dmsPocCacheModel.roadTestDate = Long.MIN_VALUE;
		}

		dmsPocCacheModel.interiors = isInteriors();

		dmsPocCacheModel.interiorsPolishing = isInteriorsPolishing();

		dmsPocCacheModel.exteriors = isExteriors();

		dmsPocCacheModel.exteriorsPolishing = isExteriorsPolishing();

		dmsPocCacheModel.vacuumCleaned = isVacuumCleaned();

		dmsPocCacheModel.washingCheckerSignature = getWashingCheckerSignature();

		String washingCheckerSignature = dmsPocCacheModel.washingCheckerSignature;

		if ((washingCheckerSignature != null) &&
				(washingCheckerSignature.length() == 0)) {
			dmsPocCacheModel.washingCheckerSignature = null;
		}

		dmsPocCacheModel.status = getStatus();

		String status = dmsPocCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			dmsPocCacheModel.status = null;
		}

		dmsPocCacheModel.toShow = isToShow();

		return dmsPocCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(305);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", id=");
		sb.append(getId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", orgId=");
		sb.append(getOrgId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", modifiedByName=");
		sb.append(getModifiedByName());
		sb.append(", deleted=");
		sb.append(isDeleted());
		sb.append(", repairOrderNo=");
		sb.append(getRepairOrderNo());
		sb.append(", dealerCode=");
		sb.append(getDealerCode());
		sb.append(", authorisedDealerInfo=");
		sb.append(getAuthorisedDealerInfo());
		sb.append(", dealershipName=");
		sb.append(getDealershipName());
		sb.append(", dealershipAddress=");
		sb.append(getDealershipAddress());
		sb.append(", dealerShipPhoneNo=");
		sb.append(getDealerShipPhoneNo());
		sb.append(", faxNo=");
		sb.append(getFaxNo());
		sb.append(", dealershipEmail=");
		sb.append(getDealershipEmail());
		sb.append(", GST=");
		sb.append(getGST());
		sb.append(", customerName=");
		sb.append(getCustomerName());
		sb.append(", customerAddress=");
		sb.append(getCustomerAddress());
		sb.append(", customerMobileNo=");
		sb.append(getCustomerMobileNo());
		sb.append(", customerEmailAddress=");
		sb.append(getCustomerEmailAddress());
		sb.append(", contactPerson=");
		sb.append(getContactPerson());
		sb.append(", contactPersonPhone=");
		sb.append(getContactPersonPhone());
		sb.append(", regNo=");
		sb.append(getRegNo());
		sb.append(", VIN=");
		sb.append(getVIN());
		sb.append(", dateOfDelivery=");
		sb.append(getDateOfDelivery());
		sb.append(", kmsIn=");
		sb.append(getKmsIn());
		sb.append(", model=");
		sb.append(getModel());
		sb.append(", engineNo=");
		sb.append(getEngineNo());
		sb.append(", insurancePolicyNo=");
		sb.append(getInsurancePolicyNo());
		sb.append(", insuranceExpiryDate=");
		sb.append(getInsuranceExpiryDate());
		sb.append(", rsaRequired=");
		sb.append(isRsaRequired());
		sb.append(", appointmentType=");
		sb.append(getAppointmentType());
		sb.append(", orderDateIn=");
		sb.append(getOrderDateIn());
		sb.append(", orderTimeIn=");
		sb.append(getOrderTimeIn());
		sb.append(", serviceAdvisor=");
		sb.append(getServiceAdvisor());
		sb.append(", serviceAdvisorMobileNo=");
		sb.append(getServiceAdvisorMobileNo());
		sb.append(", soldByDealer=");
		sb.append(getSoldByDealer());
		sb.append(", customerMobilityType=");
		sb.append(getCustomerMobilityType());
		sb.append(", transactionNo=");
		sb.append(getTransactionNo());
		sb.append(", reasonForVisit=");
		sb.append(getReasonForVisit());
		sb.append(", extendedWarranty=");
		sb.append(getExtendedWarranty());
		sb.append(", servicePlan=");
		sb.append(getServicePlan());
		sb.append(", customerOrderDescription=");
		sb.append(getCustomerOrderDescription());
		sb.append(", complaint=");
		sb.append(getComplaint());
		sb.append(", workToBeDone=");
		sb.append(getWorkToBeDone());
		sb.append(", instruction=");
		sb.append(getInstruction());
		sb.append(", carPicture=");
		sb.append(getCarPicture());
		sb.append(", xDent=");
		sb.append(getXDent());
		sb.append(", scratch=");
		sb.append(getScratch());
		sb.append(", bodyDamage=");
		sb.append(getBodyDamage());
		sb.append(", modificationOrNonOBMFittings=");
		sb.append(getModificationOrNonOBMFittings());
		sb.append(", tyreCondition=");
		sb.append(getTyreCondition());
		sb.append(", treadDepth=");
		sb.append(getTreadDepth());
		sb.append(", frontRight=");
		sb.append(getFrontRight());
		sb.append(", frontLeft=");
		sb.append(getFrontLeft());
		sb.append(", rearRight=");
		sb.append(getRearRight());
		sb.append(", rearLeft=");
		sb.append(getRearLeft());
		sb.append(", windowsGlazzing=");
		sb.append(getWindowsGlazzing());
		sb.append(", wiperBlades=");
		sb.append(getWiperBlades());
		sb.append(", lights=");
		sb.append(getLights());
		sb.append(", exhaustSystem=");
		sb.append(getExhaustSystem());
		sb.append(", underbody=");
		sb.append(getUnderbody());
		sb.append(", engineCompartment=");
		sb.append(getEngineCompartment());
		sb.append(", washing=");
		sb.append(getWashing());
		sb.append(", oilLevel=");
		sb.append(getOilLevel());
		sb.append(", coolant=");
		sb.append(getCoolant());
		sb.append(", windshieldWasher=");
		sb.append(getWindshieldWasher());
		sb.append(", brakes=");
		sb.append(getBrakes());
		sb.append(", axle=");
		sb.append(getAxle());
		sb.append(", monograms=");
		sb.append(getMonograms());
		sb.append(", polishing=");
		sb.append(getPolishing());
		sb.append(", fuel=");
		sb.append(getFuel());
		sb.append(", ownersManual=");
		sb.append(getOwnersManual());
		sb.append(", serScheMaintenanceManual=");
		sb.append(getSerScheMaintenanceManual());
		sb.append(", infotainmentMmiNavigManual=");
		sb.append(getInfotainmentMmiNavigManual());
		sb.append(", extWarrantyBook=");
		sb.append(getExtWarrantyBook());
		sb.append(", quickReferenceGuide=");
		sb.append(getQuickReferenceGuide());
		sb.append(", spareWheel=");
		sb.append(getSpareWheel());
		sb.append(", jackToolKits=");
		sb.append(getJackToolKits());
		sb.append(", floorMat=");
		sb.append(getFloorMat());
		sb.append(", mudFlaps=");
		sb.append(getMudFlaps());
		sb.append(", warningTriangle=");
		sb.append(getWarningTriangle());
		sb.append(", firstAidKit=");
		sb.append(getFirstAidKit());
		sb.append(", noOfKeys=");
		sb.append(getNoOfKeys());
		sb.append(", otherLooseItems=");
		sb.append(getOtherLooseItems());
		sb.append(", financialInformation=");
		sb.append(getFinancialInformation());
		sb.append(", modeOfPayment=");
		sb.append(getModeOfPayment());
		sb.append(", estimatedCost=");
		sb.append(getEstimatedCost());
		sb.append(", taxesAsApplicable=");
		sb.append(getTaxesAsApplicable());
		sb.append(", estimatedDateOfDelivery=");
		sb.append(getEstimatedDateOfDelivery());
		sb.append(", estimatedDeliveryTime=");
		sb.append(getEstimatedDeliveryTime());
		sb.append(", laborEstimate=");
		sb.append(getLaborEstimate());
		sb.append(", parts=");
		sb.append(getParts());
		sb.append(", termsAndConditions=");
		sb.append(getTermsAndConditions());
		sb.append(", grantMyConsent=");
		sb.append(getGrantMyConsent());
		sb.append(", serviceAdvisotSignature=");
		sb.append(getServiceAdvisotSignature());
		sb.append(", customerSignature=");
		sb.append(getCustomerSignature());
		sb.append(", remarksArea=");
		sb.append(getRemarksArea());
		sb.append(", termsStrictly=");
		sb.append(getTermsStrictly());
		sb.append(", workshopCopy=");
		sb.append(getWorkshopCopy());
		sb.append(", version=");
		sb.append(getVersion());
		sb.append(", customerWaiting=");
		sb.append(isCustomerWaiting());
		sb.append(", campaign=");
		sb.append(getCampaign());
		sb.append(", dissNo=");
		sb.append(getDissNo());
		sb.append(", descriptiveInformation=");
		sb.append(getDescriptiveInformation());
		sb.append(", timeStart=");
		sb.append(getTimeStart());
		sb.append(", timeStop=");
		sb.append(getTimeStop());
		sb.append(", nameOfTechnician=");
		sb.append(getNameOfTechnician());
		sb.append(", technicianSignature=");
		sb.append(getTechnicianSignature());
		sb.append(", inventoryPartsJSONStr=");
		sb.append(getInventoryPartsJSONStr());
		sb.append(", partNumber=");
		sb.append(getPartNumber());
		sb.append(", partDescription=");
		sb.append(getPartDescription());
		sb.append(", partCatagory=");
		sb.append(getPartCatagory());
		sb.append(", internalPartsOrder=");
		sb.append(getInternalPartsOrder());
		sb.append(", partQuantity=");
		sb.append(getPartQuantity());
		sb.append(", partRate=");
		sb.append(getPartRate());
		sb.append(", partCost=");
		sb.append(getPartCost());
		sb.append(", partTotal=");
		sb.append(getPartTotal());
		sb.append(", partsJSONStr=");
		sb.append(getPartsJSONStr());
		sb.append(", labourDescription=");
		sb.append(getLabourDescription());
		sb.append(", labourCatagory=");
		sb.append(getLabourCatagory());
		sb.append(", labourCode=");
		sb.append(getLabourCode());
		sb.append(", timeUnit=");
		sb.append(getTimeUnit());
		sb.append(", hours=");
		sb.append(getHours());
		sb.append(", labourRate=");
		sb.append(getLabourRate());
		sb.append(", labourCost=");
		sb.append(getLabourCost());
		sb.append(", labourTotal=");
		sb.append(getLabourTotal());
		sb.append(", labourJSONStr=");
		sb.append(getLabourJSONStr());
		sb.append(", additionalRepairsReqDesc=");
		sb.append(getAdditionalRepairsReqDesc());
		sb.append(", additionalRepairsReqPart=");
		sb.append(getAdditionalRepairsReqPart());
		sb.append(", additionalRepairsReqLabour=");
		sb.append(getAdditionalRepairsReqLabour());
		sb.append(", additionalRepairsReqAuth=");
		sb.append(getAdditionalRepairsReqAuth());
		sb.append(", additionalRepairsReqDT=");
		sb.append(getAdditionalRepairsReqDT());
		sb.append(", roadTestKmOut=");
		sb.append(getRoadTestKmOut());
		sb.append(", roadTestKmIn=");
		sb.append(getRoadTestKmIn());
		sb.append(", allJobsAttended=");
		sb.append(isAllJobsAttended());
		sb.append(", accessoriesSettingAsOriginal=");
		sb.append(isAccessoriesSettingAsOriginal());
		sb.append(", roadTestSignature=");
		sb.append(getRoadTestSignature());
		sb.append(", roadTestDate=");
		sb.append(getRoadTestDate());
		sb.append(", interiors=");
		sb.append(isInteriors());
		sb.append(", interiorsPolishing=");
		sb.append(isInteriorsPolishing());
		sb.append(", exteriors=");
		sb.append(isExteriors());
		sb.append(", exteriorsPolishing=");
		sb.append(isExteriorsPolishing());
		sb.append(", vacuumCleaned=");
		sb.append(isVacuumCleaned());
		sb.append(", washingCheckerSignature=");
		sb.append(getWashingCheckerSignature());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", toShow=");
		sb.append(isToShow());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(460);

		sb.append("<model><model-name>");
		sb.append("com.tc.poc.dms.model.DmsPoc");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orgId</column-name><column-value><![CDATA[");
		sb.append(getOrgId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedByName</column-name><column-value><![CDATA[");
		sb.append(getModifiedByName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(isDeleted());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>repairOrderNo</column-name><column-value><![CDATA[");
		sb.append(getRepairOrderNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dealerCode</column-name><column-value><![CDATA[");
		sb.append(getDealerCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>authorisedDealerInfo</column-name><column-value><![CDATA[");
		sb.append(getAuthorisedDealerInfo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dealershipName</column-name><column-value><![CDATA[");
		sb.append(getDealershipName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dealershipAddress</column-name><column-value><![CDATA[");
		sb.append(getDealershipAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dealerShipPhoneNo</column-name><column-value><![CDATA[");
		sb.append(getDealerShipPhoneNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>faxNo</column-name><column-value><![CDATA[");
		sb.append(getFaxNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dealershipEmail</column-name><column-value><![CDATA[");
		sb.append(getDealershipEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>GST</column-name><column-value><![CDATA[");
		sb.append(getGST());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerName</column-name><column-value><![CDATA[");
		sb.append(getCustomerName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerAddress</column-name><column-value><![CDATA[");
		sb.append(getCustomerAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerMobileNo</column-name><column-value><![CDATA[");
		sb.append(getCustomerMobileNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getCustomerEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPerson</column-name><column-value><![CDATA[");
		sb.append(getContactPerson());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPersonPhone</column-name><column-value><![CDATA[");
		sb.append(getContactPersonPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>regNo</column-name><column-value><![CDATA[");
		sb.append(getRegNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>VIN</column-name><column-value><![CDATA[");
		sb.append(getVIN());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dateOfDelivery</column-name><column-value><![CDATA[");
		sb.append(getDateOfDelivery());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>kmsIn</column-name><column-value><![CDATA[");
		sb.append(getKmsIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>model</column-name><column-value><![CDATA[");
		sb.append(getModel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>engineNo</column-name><column-value><![CDATA[");
		sb.append(getEngineNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>insurancePolicyNo</column-name><column-value><![CDATA[");
		sb.append(getInsurancePolicyNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>insuranceExpiryDate</column-name><column-value><![CDATA[");
		sb.append(getInsuranceExpiryDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsaRequired</column-name><column-value><![CDATA[");
		sb.append(isRsaRequired());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>appointmentType</column-name><column-value><![CDATA[");
		sb.append(getAppointmentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orderDateIn</column-name><column-value><![CDATA[");
		sb.append(getOrderDateIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>orderTimeIn</column-name><column-value><![CDATA[");
		sb.append(getOrderTimeIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceAdvisor</column-name><column-value><![CDATA[");
		sb.append(getServiceAdvisor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceAdvisorMobileNo</column-name><column-value><![CDATA[");
		sb.append(getServiceAdvisorMobileNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>soldByDealer</column-name><column-value><![CDATA[");
		sb.append(getSoldByDealer());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerMobilityType</column-name><column-value><![CDATA[");
		sb.append(getCustomerMobilityType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>transactionNo</column-name><column-value><![CDATA[");
		sb.append(getTransactionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reasonForVisit</column-name><column-value><![CDATA[");
		sb.append(getReasonForVisit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extendedWarranty</column-name><column-value><![CDATA[");
		sb.append(getExtendedWarranty());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>servicePlan</column-name><column-value><![CDATA[");
		sb.append(getServicePlan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerOrderDescription</column-name><column-value><![CDATA[");
		sb.append(getCustomerOrderDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>complaint</column-name><column-value><![CDATA[");
		sb.append(getComplaint());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workToBeDone</column-name><column-value><![CDATA[");
		sb.append(getWorkToBeDone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>instruction</column-name><column-value><![CDATA[");
		sb.append(getInstruction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>carPicture</column-name><column-value><![CDATA[");
		sb.append(getCarPicture());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>xDent</column-name><column-value><![CDATA[");
		sb.append(getXDent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scratch</column-name><column-value><![CDATA[");
		sb.append(getScratch());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bodyDamage</column-name><column-value><![CDATA[");
		sb.append(getBodyDamage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modificationOrNonOBMFittings</column-name><column-value><![CDATA[");
		sb.append(getModificationOrNonOBMFittings());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tyreCondition</column-name><column-value><![CDATA[");
		sb.append(getTyreCondition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>treadDepth</column-name><column-value><![CDATA[");
		sb.append(getTreadDepth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>frontRight</column-name><column-value><![CDATA[");
		sb.append(getFrontRight());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>frontLeft</column-name><column-value><![CDATA[");
		sb.append(getFrontLeft());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rearRight</column-name><column-value><![CDATA[");
		sb.append(getRearRight());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rearLeft</column-name><column-value><![CDATA[");
		sb.append(getRearLeft());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>windowsGlazzing</column-name><column-value><![CDATA[");
		sb.append(getWindowsGlazzing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>wiperBlades</column-name><column-value><![CDATA[");
		sb.append(getWiperBlades());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lights</column-name><column-value><![CDATA[");
		sb.append(getLights());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>exhaustSystem</column-name><column-value><![CDATA[");
		sb.append(getExhaustSystem());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>underbody</column-name><column-value><![CDATA[");
		sb.append(getUnderbody());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>engineCompartment</column-name><column-value><![CDATA[");
		sb.append(getEngineCompartment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>washing</column-name><column-value><![CDATA[");
		sb.append(getWashing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oilLevel</column-name><column-value><![CDATA[");
		sb.append(getOilLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>coolant</column-name><column-value><![CDATA[");
		sb.append(getCoolant());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>windshieldWasher</column-name><column-value><![CDATA[");
		sb.append(getWindshieldWasher());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>brakes</column-name><column-value><![CDATA[");
		sb.append(getBrakes());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>axle</column-name><column-value><![CDATA[");
		sb.append(getAxle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>monograms</column-name><column-value><![CDATA[");
		sb.append(getMonograms());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>polishing</column-name><column-value><![CDATA[");
		sb.append(getPolishing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fuel</column-name><column-value><![CDATA[");
		sb.append(getFuel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ownersManual</column-name><column-value><![CDATA[");
		sb.append(getOwnersManual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serScheMaintenanceManual</column-name><column-value><![CDATA[");
		sb.append(getSerScheMaintenanceManual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>infotainmentMmiNavigManual</column-name><column-value><![CDATA[");
		sb.append(getInfotainmentMmiNavigManual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extWarrantyBook</column-name><column-value><![CDATA[");
		sb.append(getExtWarrantyBook());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quickReferenceGuide</column-name><column-value><![CDATA[");
		sb.append(getQuickReferenceGuide());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>spareWheel</column-name><column-value><![CDATA[");
		sb.append(getSpareWheel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jackToolKits</column-name><column-value><![CDATA[");
		sb.append(getJackToolKits());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>floorMat</column-name><column-value><![CDATA[");
		sb.append(getFloorMat());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mudFlaps</column-name><column-value><![CDATA[");
		sb.append(getMudFlaps());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>warningTriangle</column-name><column-value><![CDATA[");
		sb.append(getWarningTriangle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstAidKit</column-name><column-value><![CDATA[");
		sb.append(getFirstAidKit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>noOfKeys</column-name><column-value><![CDATA[");
		sb.append(getNoOfKeys());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>otherLooseItems</column-name><column-value><![CDATA[");
		sb.append(getOtherLooseItems());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>financialInformation</column-name><column-value><![CDATA[");
		sb.append(getFinancialInformation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modeOfPayment</column-name><column-value><![CDATA[");
		sb.append(getModeOfPayment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estimatedCost</column-name><column-value><![CDATA[");
		sb.append(getEstimatedCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>taxesAsApplicable</column-name><column-value><![CDATA[");
		sb.append(getTaxesAsApplicable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estimatedDateOfDelivery</column-name><column-value><![CDATA[");
		sb.append(getEstimatedDateOfDelivery());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estimatedDeliveryTime</column-name><column-value><![CDATA[");
		sb.append(getEstimatedDeliveryTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>laborEstimate</column-name><column-value><![CDATA[");
		sb.append(getLaborEstimate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parts</column-name><column-value><![CDATA[");
		sb.append(getParts());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>termsAndConditions</column-name><column-value><![CDATA[");
		sb.append(getTermsAndConditions());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>grantMyConsent</column-name><column-value><![CDATA[");
		sb.append(getGrantMyConsent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>serviceAdvisotSignature</column-name><column-value><![CDATA[");
		sb.append(getServiceAdvisotSignature());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerSignature</column-name><column-value><![CDATA[");
		sb.append(getCustomerSignature());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>remarksArea</column-name><column-value><![CDATA[");
		sb.append(getRemarksArea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>termsStrictly</column-name><column-value><![CDATA[");
		sb.append(getTermsStrictly());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workshopCopy</column-name><column-value><![CDATA[");
		sb.append(getWorkshopCopy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerWaiting</column-name><column-value><![CDATA[");
		sb.append(isCustomerWaiting());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>campaign</column-name><column-value><![CDATA[");
		sb.append(getCampaign());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dissNo</column-name><column-value><![CDATA[");
		sb.append(getDissNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descriptiveInformation</column-name><column-value><![CDATA[");
		sb.append(getDescriptiveInformation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>timeStart</column-name><column-value><![CDATA[");
		sb.append(getTimeStart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>timeStop</column-name><column-value><![CDATA[");
		sb.append(getTimeStop());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nameOfTechnician</column-name><column-value><![CDATA[");
		sb.append(getNameOfTechnician());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>technicianSignature</column-name><column-value><![CDATA[");
		sb.append(getTechnicianSignature());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inventoryPartsJSONStr</column-name><column-value><![CDATA[");
		sb.append(getInventoryPartsJSONStr());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partNumber</column-name><column-value><![CDATA[");
		sb.append(getPartNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partDescription</column-name><column-value><![CDATA[");
		sb.append(getPartDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partCatagory</column-name><column-value><![CDATA[");
		sb.append(getPartCatagory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>internalPartsOrder</column-name><column-value><![CDATA[");
		sb.append(getInternalPartsOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partQuantity</column-name><column-value><![CDATA[");
		sb.append(getPartQuantity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partRate</column-name><column-value><![CDATA[");
		sb.append(getPartRate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partCost</column-name><column-value><![CDATA[");
		sb.append(getPartCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partTotal</column-name><column-value><![CDATA[");
		sb.append(getPartTotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>partsJSONStr</column-name><column-value><![CDATA[");
		sb.append(getPartsJSONStr());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>labourDescription</column-name><column-value><![CDATA[");
		sb.append(getLabourDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>labourCatagory</column-name><column-value><![CDATA[");
		sb.append(getLabourCatagory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>labourCode</column-name><column-value><![CDATA[");
		sb.append(getLabourCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>timeUnit</column-name><column-value><![CDATA[");
		sb.append(getTimeUnit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hours</column-name><column-value><![CDATA[");
		sb.append(getHours());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>labourRate</column-name><column-value><![CDATA[");
		sb.append(getLabourRate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>labourCost</column-name><column-value><![CDATA[");
		sb.append(getLabourCost());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>labourTotal</column-name><column-value><![CDATA[");
		sb.append(getLabourTotal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>labourJSONStr</column-name><column-value><![CDATA[");
		sb.append(getLabourJSONStr());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionalRepairsReqDesc</column-name><column-value><![CDATA[");
		sb.append(getAdditionalRepairsReqDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionalRepairsReqPart</column-name><column-value><![CDATA[");
		sb.append(getAdditionalRepairsReqPart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionalRepairsReqLabour</column-name><column-value><![CDATA[");
		sb.append(getAdditionalRepairsReqLabour());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionalRepairsReqAuth</column-name><column-value><![CDATA[");
		sb.append(getAdditionalRepairsReqAuth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>additionalRepairsReqDT</column-name><column-value><![CDATA[");
		sb.append(getAdditionalRepairsReqDT());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roadTestKmOut</column-name><column-value><![CDATA[");
		sb.append(getRoadTestKmOut());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roadTestKmIn</column-name><column-value><![CDATA[");
		sb.append(getRoadTestKmIn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>allJobsAttended</column-name><column-value><![CDATA[");
		sb.append(isAllJobsAttended());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accessoriesSettingAsOriginal</column-name><column-value><![CDATA[");
		sb.append(isAccessoriesSettingAsOriginal());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roadTestSignature</column-name><column-value><![CDATA[");
		sb.append(getRoadTestSignature());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>roadTestDate</column-name><column-value><![CDATA[");
		sb.append(getRoadTestDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>interiors</column-name><column-value><![CDATA[");
		sb.append(isInteriors());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>interiorsPolishing</column-name><column-value><![CDATA[");
		sb.append(isInteriorsPolishing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>exteriors</column-name><column-value><![CDATA[");
		sb.append(isExteriors());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>exteriorsPolishing</column-name><column-value><![CDATA[");
		sb.append(isExteriorsPolishing());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vacuumCleaned</column-name><column-value><![CDATA[");
		sb.append(isVacuumCleaned());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>washingCheckerSignature</column-name><column-value><![CDATA[");
		sb.append(getWashingCheckerSignature());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toShow</column-name><column-value><![CDATA[");
		sb.append(isToShow());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = DmsPoc.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			DmsPoc.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _id;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _orgId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _modifiedBy;
	private String _modifiedByName;
	private boolean _deleted;
	private boolean _originalDeleted;
	private boolean _setOriginalDeleted;
	private String _repairOrderNo;
	private String _dealerCode;
	private String _authorisedDealerInfo;
	private String _dealershipName;
	private String _dealershipAddress;
	private long _dealerShipPhoneNo;
	private long _faxNo;
	private String _dealershipEmail;
	private String _GST;
	private String _customerName;
	private String _customerAddress;
	private long _customerMobileNo;
	private String _customerEmailAddress;
	private String _contactPerson;
	private long _contactPersonPhone;
	private String _regNo;
	private String _originalRegNo;
	private String _VIN;
	private String _originalVIN;
	private Date _dateOfDelivery;
	private long _kmsIn;
	private String _model;
	private String _engineNo;
	private String _insurancePolicyNo;
	private Date _insuranceExpiryDate;
	private boolean _rsaRequired;
	private String _appointmentType;
	private Date _orderDateIn;
	private Date _orderTimeIn;
	private String _serviceAdvisor;
	private long _serviceAdvisorMobileNo;
	private String _soldByDealer;
	private String _customerMobilityType;
	private String _transactionNo;
	private String _reasonForVisit;
	private String _extendedWarranty;
	private String _servicePlan;
	private String _customerOrderDescription;
	private String _complaint;
	private String _workToBeDone;
	private String _instruction;
	private String _carPicture;
	private String _xDent;
	private String _scratch;
	private String _bodyDamage;
	private String _modificationOrNonOBMFittings;
	private String _tyreCondition;
	private String _treadDepth;
	private String _frontRight;
	private String _frontLeft;
	private String _rearRight;
	private String _rearLeft;
	private String _windowsGlazzing;
	private String _wiperBlades;
	private String _lights;
	private String _exhaustSystem;
	private String _underbody;
	private String _engineCompartment;
	private String _washing;
	private String _oilLevel;
	private String _coolant;
	private String _windshieldWasher;
	private String _brakes;
	private String _axle;
	private String _monograms;
	private String _polishing;
	private String _fuel;
	private String _ownersManual;
	private String _serScheMaintenanceManual;
	private String _infotainmentMmiNavigManual;
	private String _extWarrantyBook;
	private String _quickReferenceGuide;
	private String _spareWheel;
	private String _jackToolKits;
	private String _floorMat;
	private String _mudFlaps;
	private String _warningTriangle;
	private String _firstAidKit;
	private long _noOfKeys;
	private String _otherLooseItems;
	private String _financialInformation;
	private String _modeOfPayment;
	private long _estimatedCost;
	private String _taxesAsApplicable;
	private Date _estimatedDateOfDelivery;
	private String _estimatedDeliveryTime;
	private long _laborEstimate;
	private long _parts;
	private String _termsAndConditions;
	private String _grantMyConsent;
	private String _serviceAdvisotSignature;
	private String _customerSignature;
	private String _remarksArea;
	private String _termsStrictly;
	private String _workshopCopy;
	private String _version;
	private boolean _customerWaiting;
	private String _campaign;
	private String _dissNo;
	private String _descriptiveInformation;
	private String _timeStart;
	private String _timeStop;
	private String _nameOfTechnician;
	private String _technicianSignature;
	private String _inventoryPartsJSONStr;
	private String _partNumber;
	private String _partDescription;
	private String _partCatagory;
	private String _internalPartsOrder;
	private String _partQuantity;
	private String _partRate;
	private String _partCost;
	private String _partTotal;
	private String _partsJSONStr;
	private String _labourDescription;
	private String _labourCatagory;
	private String _labourCode;
	private String _timeUnit;
	private String _hours;
	private String _labourRate;
	private long _labourCost;
	private long _labourTotal;
	private String _labourJSONStr;
	private String _additionalRepairsReqDesc;
	private String _additionalRepairsReqPart;
	private String _additionalRepairsReqLabour;
	private String _additionalRepairsReqAuth;
	private Date _additionalRepairsReqDT;
	private long _roadTestKmOut;
	private long _roadTestKmIn;
	private boolean _allJobsAttended;
	private boolean _accessoriesSettingAsOriginal;
	private String _roadTestSignature;
	private Date _roadTestDate;
	private boolean _interiors;
	private boolean _interiorsPolishing;
	private boolean _exteriors;
	private boolean _exteriorsPolishing;
	private boolean _vacuumCleaned;
	private String _washingCheckerSignature;
	private String _status;
	private boolean _toShow;
	private boolean _originalToShow;
	private boolean _setOriginalToShow;
	private long _columnBitmask;
	private DmsPoc _escapedModel;
}